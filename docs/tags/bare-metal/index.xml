
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>bare-metal on Hemashushu&#39;s Homepage</title>
   <link>https://hemashushu.github.io/tags/bare-metal/</link>
   <description>Recent content in bare-metal on Hemashushu&#39;s Homepage</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en</language>
   <copyright>Copyright &amp;copy; 2023 - Hippospark Young</copyright>
   <lastBuildDate>Sun, 06 Nov 2022 00:00:00 +0000</lastBuildDate>
   
       <atom:link href="https://hemashushu.github.io/tags/bare-metal/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>Platform Support</title>
       <link>https://hemashushu.github.io/works/platform-support/</link>
       <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/platform-support/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Lang&lt;/em&gt; and &lt;em&gt;XiaoYu OS&lt;/em&gt; are newly designed software that have good support for various mainstream platforms. At the same time, because &lt;em&gt;XiaoXuan Lang&lt;/em&gt; has its own IR add assembly language and does not rely on traditional compilation tools and shared libraries, such as GCC and LLVM. it has faster support for newer platforms such as &lt;a href=&#34;https://en.wikipedia.org/wiki/RISC-V&#34;&gt;RISC-V&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Loongson#LoongArch&#34;&gt;LoongArch&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Lang&lt;/em&gt; and &lt;em&gt;XiaoYu OS&lt;/em&gt; hope to become the preferred programming language and operating system for new platforms.&lt;/p&gt;&lt;p&gt;The following are tables of the support status of &lt;em&gt;XiaoXuan Lang&lt;/em&gt;, &lt;em&gt;XiaoYu OS&lt;/em&gt; and other software for various platforms.&lt;/p&gt;&lt;h2 id=&#34;xiaoxuan-programming-language&#34;&gt;XiaoXuan Programming Language&lt;/h2&gt;&lt;h3 id=&#34;desktop-and-server&#34;&gt;Desktop and Server&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;XiaoXuan Core (and XiaoXuan Managed)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The runtime includes a compiler and a virtual machine. Applications are compiled into bytecode and then run in the virtual machine. Therefore, applications are almost unaffected by the host platform. The XiaoXuan Core runtime itself is developed in Rust, so it supports most platforms.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;XiaoXuan Native&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;It is a compiled languaged. The compiler itself is developed in Rust, so it also supports most platforms. However, the compilation target (i.e., native binary code) is determined by the compiler&amp;rsquo;s capabilities. Currently, XiaoXuan Native&amp;rsquo;s compilation targets cover most platforms, but the code generator for LoongArch64 is still under development.&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Software&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;x86_64&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;aarch64&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;riscv64&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;s390x&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;loongarch64&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;XiaoXuan Core&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;XiaoXuan Managed&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;XiaoXuan Native Host&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;XiaoXuan Native Target&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;In development&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&#34;browser&#34;&gt;Browser&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;XiaoXuan Script&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;It consists of a compiler, a standard library, and a piece of JavaScript glue code. The compiler and standard library are distributed in WebAssembly binary format. Applications are compiled by the compiler to WebAssembly binary and then run by the browser. In summary, as long as the browser supports JavaScript and WebAssembly, XiaoXuan Script and applications can be run.&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Software&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;Chrome&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;Firefox&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;Edge&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;Safari&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;XiaoXuan Script&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&#34;embediot&#34;&gt;Embed/IoT&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;XiaoXuan Micro&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;It includes a compiler and a virtual machine. Applications will be compiled into bytecode and merged with the virtual machine in the form of a payload. Then they will be burned into the MCU&amp;rsquo;s Flash and run. Currently, the XiaoXuan Micro virtual machine supports ARM M series architechture, such as the common Cortex-M0/M0+/M1/M3/M4/M7/M23/M33 cores. It also supports the RISC-V 32 architecture.&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Software&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;ARM Cortex-M&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;riscv32&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;XiaoXuan Micro&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&#34;xiaoyu-operating-system&#34;&gt;XiaoYu Operating System&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;XiaoYu OS&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; is based on the Linux kernel. Its userspace programs are mainly developed by XiaoXuan Core, XiaoXuan Native and Rust, so its platform support is limited by various software. However, for mainstream platforms, it can basically be well supported.&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Software&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;x86_64&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;aarch64&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;riscv64&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;s390x&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;loongarch64&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;XiaoYu OS&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;XiaoYu Micro OS&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu Micro OS&lt;/em&gt; is a micro operating system that adds modules such as file system, hardware abstraction layer, and serial port communication on the basis of &lt;em&gt;XiaoXuan Micro&lt;/em&gt;. Therefore, its platform support is the same as &lt;em&gt;XiaoXuan Micro&lt;/em&gt;. Of course, you need to download the corresponding ported version for different chips (and boards). The specific chip list can be found in the project&amp;rsquo;s documentation.&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Software&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;ARM Cortex-M&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;riscv32&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;XiaoYu Micro OS&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&#34;related-projects&#34;&gt;Related projects&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-lang&#34;&gt;XiaoXuan Language Family&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoyu-os&#34;&gt;XiaoYu OS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoyu-micro-os&#34;&gt;XiaoYu Micro OS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan GPU</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-gpu/</link>
       <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-gpu/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan GPU&lt;/em&gt; is a modern shading language designed to facilitate the rapid development of high-performance programs such as game engines, AR, AI engines, data analysis, biocomputing, scientific computing, and more. It features the same elegant syntax and design philosophy as the &lt;em&gt;XiaoXuan Lang&lt;/em&gt;, allowing you to develop in new domains without learning a new language.&lt;/p&gt;&lt;p&gt;Under the hood, it compiles to the &lt;a href=&#34;https://www.w3.org/TR/WGSL/&#34;&gt;WGSL language (WebGPU Shading Language)&lt;/a&gt;, which can run on the vast majority of GPU platforms and browsers.&lt;/p&gt;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Modern and expressive syntax&lt;/p&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan GPU&lt;/em&gt; share the same syntax as &lt;em&gt;XiaoXuan Lang&lt;/em&gt;, which is inspired by JavaScript, Rust and Lisp, making it easy to learn and use for experienced programmers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Portable&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan GPU&lt;/em&gt; compiles to WGSL, which can run on the vast majority of GPU platforms and browsers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Extensible&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan GPU&lt;/em&gt; is designed to be extensible, allowing developers to create, share and reuse modules.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/compilation.webp&#34;         alt=&#34;Compilation and Running&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;Compilation and Running&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&#34;potential-applications-of-_xiaoxuan-gpu_&#34;&gt;Potential applications of &lt;em&gt;XiaoXuan GPU&lt;/em&gt;&lt;/h2&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan GPU&lt;/em&gt; is a powerful tool for developing applications which run on GPUs, here are some potential applications of &lt;em&gt;XiaoXuan GPU&lt;/em&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Game engines: render stunning visuals and provide immersive gameplay experiences.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;AR applications: overlay digital information onto the real world.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;AI engines: power machine learning and deep learning applications.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Data analysis: process and visualize large datasets.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Biocomputing: simulate biological processes and analyze biological data.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Scientific computing: solve complex mathematical problems.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;&lt;p&gt;Read on to quickly set up your &lt;em&gt;XiaoXuan GPU&lt;/em&gt; development environment, writing your first &lt;em&gt;XiaoXuan GPU&lt;/em&gt; program and get directions for further learning.&lt;/p&gt;&lt;h3 id=&#34;set-up-a-_xiaoxuan-gpu_-development-environment&#34;&gt;Set up a &lt;em&gt;XiaoXuan GPU&lt;/em&gt; development environment&lt;/h3&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h3 id=&#34;writing-your-first-_xiaoxuan-gpu_-program&#34;&gt;Writing your first &lt;em&gt;XiaoXuan GPU&lt;/em&gt; program&lt;/h3&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h3 id=&#34;running-the-program&#34;&gt;Running the program&lt;/h3&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h3 id=&#34;next-steps&#34;&gt;Next steps&lt;/h3&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;&lt;p&gt;Popular free learning resources for beginners:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan GPU Playground&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan GPU in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Logic</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-logic/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-logic/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Logic&lt;/em&gt; is a brand new and modern hardware description language (HDL) that lets you design hardware and chips in the same ease and collaboration as open-source software. Its built-in GPU-accelerated simulator dramatically enhances test efficiency, saving you valuable time and resources.&lt;/p&gt;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Synthesizing&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Logic&lt;/em&gt; can compile to &lt;em&gt;SystemVerilog&lt;/em&gt; TODO&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Visualize interacable simulation&lt;/p&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Unit test&lt;/p&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Modular&lt;/p&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/compilation.webp&#34;         alt=&#34;XiaoXuan Logic Compilation&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;XiaoXuan Logic Compilation&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&#34;comparing-with-systemverilog&#34;&gt;Comparing with SystemVerilog&lt;/h2&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h2 id=&#34;manuals-and-tutorials&#34;&gt;Manuals and tutorials&lt;/h2&gt;&lt;!-- raw HTML omitted --&gt; &lt;ul class=&#34;card&#34;&gt; &lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c5&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;S90 - Building Your Own Linux-Capable CPU: A Step-by-Step Guide&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;Design a RISC-V CPU core using XiaoXuan Logic&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-15&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Digital circuit fundamentals: combinational and sequential circuits&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Building a Blinky circuit, and interacting with the visual simulator&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Synthesizing and downloading to FPGA hardware (Optional)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Introduction to RISC-V Instruction Architecture&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Instruction decoder&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Register File and Arithmetic Logic Unit (ALU) &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Jump and branch instructions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Memory and load/store instructions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;RISC-V calling convention ABI and implementing the functon calling&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Memory mapping and implementing the UART peripheral&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;ROM and Building a simple program (firmware)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Synthesizing and downloading to FPGA hardware (Optional)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Interacting via USB-UART and terminal on computer&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;/ul&gt; </description>
     </item>
   
     <item>
       <title>XiaoXuan Managed</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-managed/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-managed/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Managed&lt;/em&gt; is used for building extremely secure, robust, truly portable and responsive programs, including desktop applications, cloud-native applications (such as microservices and serverless functions etc.), business systems, data science and A.I. programs and more. Each program runs in its own isolated environement, eliminating the need for containers. Applications do not need to be installed, they can be run with just a URL.&lt;/p&gt;&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Managed&lt;/em&gt; applications run in an &amp;ldquo;isolated&amp;rdquo; environment, which brings a new way to run and publish applications:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;For users&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You don&amp;rsquo;t have to worry about the source of the application or whether it contains backdoors or malicious code. You can run it with confidence because &lt;em&gt;XiaoXuan Managed&lt;/em&gt; applications cannot harm your system or access your private data or files without your permission.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You don&amp;rsquo;t have to worry about the application not being able to run because the system is missing certain shared libraries, because &lt;em&gt;XiaoXuan Managed&lt;/em&gt; programs are truly portable. You don&amp;rsquo;t need to install additional libraries for the system, or compile the program source code. As long as your system can run the &lt;em&gt;XiaoXuan Managed&lt;/em&gt; runtime, the application will definitely be able to run successfully.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can even run a new application without installing it first and use all its features.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;For developers&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You don&amp;rsquo;t have to open source your work or spend time building user trust. You can simply publish your application when it&amp;rsquo;s ready.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You don&amp;rsquo;t need to submit your application to an &amp;ldquo;application store&amp;rdquo; or wait for lengthy review process.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You don&amp;rsquo;t have to pay a commission to an &amp;ldquo;application store&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can simply provide users with the application binary package, a URL, or even the address of a Github repository. With this information, users can run your applicaton.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can even release new versions of the application at any time, and users will be automatically notified of new versions.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Managed&lt;/em&gt; provides a new &amp;ldquo;user-application-developer&amp;rdquo; relationship. Users can simply focus on the features they need, and developer can simply focus on developing their software. There is no &amp;ldquo;application store&amp;rdquo; or &amp;ldquo;maintainer&amp;rdquo; between the two.&lt;/p&gt;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;High Security&lt;/strong&gt;: &lt;em&gt;XiaoXuan Managed&lt;/em&gt; applications are strictly sandboxed and cannot access the user&amp;rsquo;s system or data without permission.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;True Portability&lt;/strong&gt;: Some programming languages allow user code to access native libraries, such as Java&amp;rsquo;s JNI, Python&amp;rsquo;s Binding, and Node.js&amp;rsquo;s Addons. This causes the application to be bound to the system environment. For example, when the user&amp;rsquo;s environment changes, it may take a lot of effort to make it work properly. &lt;em&gt;XiaoXuan Managed&lt;/em&gt;, on the other hand, completely isolates user code from the system environment. As long as the user has obtained the XiaoXuan Manged application, it will be able to run successfully.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Self-contained application distribution channels&lt;/strong&gt;: &lt;em&gt;XiaoXuan Managed&lt;/em&gt; applications can be submitted to public free software repositories, or provided by the developer themselves with a publicly accessible internet address. &lt;em&gt;XiaoXuan Managed&lt;/em&gt; applications can be automatically updated to the latest version.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;TODO&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Micro</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-micro/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-micro/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Micro&lt;/em&gt; is used for building high-performance firmware for microcontroller (MCU) easily, the built-in micro VM makes it possible to &amp;ldquo;write once, run anywhere&amp;rdquo;, build IoT applications in a more modern way.&lt;/p&gt;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&lt;p&gt;TODO&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Native</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-native/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-native/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Native&lt;/em&gt; is a memory-safe, general-purpose programming language inspired by Rust. It is designed to be simpler than Rust while it still provides automatic memory management without garbage collection, and avoids complex concepts such as ownership, borrow checking, and lifetimes. It aims to replace Rust in certain non-critical scenarios. It currently supports compiling to native code for architectures &lt;em&gt;x86-64&lt;/em&gt;, &lt;em&gt;aarch64 (ARM64)&lt;/em&gt;, &lt;em&gt;riscv64&lt;/em&gt; and &lt;em&gt;s390x (IBM Z)&lt;/em&gt;, and will supports &lt;em&gt;loongarch64&lt;/em&gt; in the future.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Currently, &lt;em&gt;XiaoXuan Native&lt;/em&gt; is written in Rust, but it will be self-hosted in the future 😄&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h2 id=&#34;related-projects&#34;&gt;Related projects&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Assembly LoongArch&lt;/span&gt; Assembler for LoongArch (la64).&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Assembly RISC-V&lt;/span&gt; Assembler for RISC-V (rv64gc).&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Assembly ARM&lt;/span&gt; Assembler for ARM (aarch64).&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Script</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-script/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-script/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Script Programming Language&lt;/em&gt; is suitable for building high-performance, solid web applications. It can be compiled to WebAssembly on-the-fly without the need for any build tools. It is intended to be the next preferred programming language for web development.&lt;/p&gt;&lt;h2 id=&#34;how-does-it-work&#34;&gt;How does it work?&lt;/h2&gt;&lt;p&gt;Only 3 files are needed to give browsers the ability to develop web applications using a new language (the XiaoXuan Script):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;ans_compiler.wasm&lt;/code&gt;, the compiler for XiaoXuan Script.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ans_loader.js&lt;/code&gt;, the loader for the compiler, which also serves as the web application manager, as well as the bridge between the WebAssembly and the Web API.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ans_std.ans&lt;/code&gt;, the source code of the XiaoXuan Script standard library.&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&#34;mid white&#34;&gt;&lt;img src=&#34;./images/compilation.webp&#34;         alt=&#34;The Compilation Process&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The Compilation Process&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;When a user accesses your web application (web page), the &lt;em&gt;compiler&lt;/em&gt; will compile all the source code (including the user code, standard library, and all dependencies) on-the-fly into a WebAssembly file, which is then cached in the user&amp;rsquo;s browser to speed up the next load. The web page and WebAssembly will then interoperate via the &lt;em&gt;bridge&lt;/em&gt;.&lt;/p&gt;&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;&lt;p&gt;Let&amp;rsquo;s create a minimal &amp;ldquo;Hello World!&amp;rdquo; XiaoXuan Script application.&lt;/p&gt;&lt;h3 id=&#34;download-the-compiler&#34;&gt;Download the compiler&lt;/h3&gt;&lt;p&gt;First create a folder named &amp;ldquo;hello-ans&amp;rdquo; in your home directory (or any directory), then download the XiaoXuan Script distribution package &lt;span class=&#34;null-link&#34;&gt;xiaoxuan_script_dist_1.0.1.tar.gz&lt;/span&gt;, which is a compressed file containing &lt;code&gt;ans_compiler.wasm&lt;/code&gt;, &lt;code&gt;ans_loader.js&lt;/code&gt;, &lt;code&gt;ans_std.ans&lt;/code&gt;, and some README etc. files, and then extract it to this folder.&lt;/p&gt;&lt;h3 id=&#34;writing-the-first-application&#34;&gt;Writing the first application&lt;/h3&gt;&lt;p&gt;Then create files &lt;em&gt;main.ans&lt;/em&gt; and &lt;em&gt;ans_package.json&lt;/em&gt; in the &amp;ldquo;hello-ans&amp;rdquo; folder.&lt;/p&gt;&lt;p&gt;The file &lt;em&gt;main.ans&lt;/em&gt; is the main module of our web application, which should contain the &lt;code&gt;main&lt;/code&gt; function. The file content is as follows:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;btn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#like&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;btn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may have noticed that the above code looks similar to the JavaScript, this is the design of XiaoXuan Script, where the names of objects and functions are kept as close as possible to JavaScript, the similarity to an existing language reduces the difficulty of learning a new language.&lt;/p&gt;&lt;p&gt;The file &lt;em&gt;ans_package.json&lt;/em&gt; is the package description file, which contains information about the package name, version, compiler version, list of source files, and dependencies. &lt;em&gt;ans_package.json&lt;/em&gt; has the following contents:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello_ans&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;compiler&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;modules&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./main.ans&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;add-a-web-page&#34;&gt;Add a web page&lt;/h3&gt;&lt;p&gt;Next, create the web page file &lt;em&gt;index.html&lt;/em&gt; in the “hello-ans” folder, the content is as follows:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Hello, XiaoXuan Script&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;./ans_loader.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;title&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;like&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;+1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The content of &lt;em&gt;index.html&lt;/em&gt; is quite simple, the key line is: &lt;code&gt;&amp;lt;script type=&amp;quot;module&amp;quot; src=&amp;quot;./ans_loader.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;, it loads the &lt;em&gt;XiaoXuan Script Loader&lt;/em&gt; and the loader does all the rest.&lt;/p&gt;&lt;p&gt;The structure of the folder &amp;ldquo;hello-ans&amp;rdquo; should look like this:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hello_ans&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_compiler.wasm&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_loader.js&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_module.json&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_std.ans&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── index.html&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── main.ans&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;running-the-application&#34;&gt;Running the application&lt;/h3&gt;&lt;p&gt;Finally, let&amp;rsquo;s create a local HTTP server, which can be done by running the command &lt;code&gt;python -m http.server&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Now open any browser and visit &lt;code&gt;http://localhost:8000/&lt;/code&gt;. You should see the text &amp;ldquo;Hello World!&amp;rdquo; and the number will increase when you click on the &amp;ldquo;Like&amp;rdquo; button.&lt;/p&gt;&lt;h2 id=&#34;q--a&#34;&gt;Q &amp;amp; A&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;What are the differences between &lt;em&gt;JavaScript&lt;/em&gt; and &lt;em&gt;XiaoXuan Script&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;JavaScript&lt;/em&gt; is the default programming language supported by browsers. It is easy to learn and use, and its syntax is flexible. Compared to &lt;em&gt;JavaScript&lt;/em&gt;, &lt;em&gt;XiaoXuan Script&lt;/em&gt; has the following advantages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;It has a stricter syntax and is a statically, strongly typed compiled programming language, it is more suitable for developing large-scale applications. It can significantly reduce coordination costs between team members in team development, and is also easier to maintain the application source code.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;It is compiled to WebAssembly before running, and WebAssembly is widely considered to have higher performance than &lt;em&gt;JavaScript&lt;/em&gt;. Therefore, &lt;em&gt;XiaoXuan Script&lt;/em&gt; has better performance in computationally intensive scenarios (such as data processing, audio or image processing).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;What are the differences between &lt;em&gt;TypeScript&lt;/em&gt; and &lt;em&gt;XiaoXuan Script&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Script&lt;/em&gt; has some syntactic similarities to TypeScript. If you are familiar with TypeScript, it means that you can easily learn &lt;em&gt;XiaoXuan Script&lt;/em&gt;. The difference is that &lt;em&gt;TypeScript&lt;/em&gt; is compiled to &lt;em&gt;JavaScript&lt;/em&gt;, while &lt;em&gt;XiaoXuan Script&lt;/em&gt; is compiled to WebAssembly, which means that &lt;em&gt;XiaoXuan Script&lt;/em&gt; will have better performance.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rust/C/C++ can also be compiled to WebAssembly, so what are the differences between &lt;em&gt;XiaoXuan Script&lt;/em&gt; and them?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Rust/C/C++ are mainly used to build parts of a web application, such as data processing libraries, rather than building the entire web application. On the other hand, &lt;em&gt;XiaoXuan Script&lt;/em&gt; is used to build the entire application. Using &lt;em&gt;XiaoXuan Script&lt;/em&gt; means that you only need to learn one language to  develop a variety of applications, which reduces the learning burden on developers.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Why on-the-fly compilation?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Script&lt;/em&gt; actually supports pre-compilation mode, which is recommended for large-scale web applications that have a large amount of source code and dependencies.&lt;/p&gt;&lt;p&gt;However, for most web applications, the code may not so large, and on-the-fly compilation mode is more convenient. It can simplify the developer&amp;rsquo;s workflow, you can write, debug and run your code like you do with &lt;em&gt;JavaScript&lt;/em&gt;, without the need for any build tools. In addition, XiaoXuan Script has a very fast compilation speed, and users can hardly notice the compilation process when they access your web application.&lt;/p&gt;&lt;h2 id=&#34;get-started&#34;&gt;Get started&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Script Playground&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Script in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;manuals--tutorials&#34;&gt;Manuals &amp;amp; Tutorials&lt;/h2&gt;&lt;!-- raw HTML omitted --&gt; &lt;ul class=&#34;card&#34;&gt; &lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c1&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;S20 - Building a Task List Organizer Web Application with XiaoXuan Script&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;                Build a local web application with IndexedDB, Web Storage API, and XiaoXuan Script                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-02-21&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Setting up the XiaoXuan Script development environment&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Analyzing and designing the application&amp;#39;s workflow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Writing basic pages&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Introduction to the Web IndexedDB API&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Writing basic XiaoXuan Script code for CRUD functionality&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Introduction to the Web Storage API and adding attachment functionality&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;/ul&gt; </description>
     </item>
   
     <item>
       <title>XiaoYu Automata</title>
       <link>https://hemashushu.github.io/works/xiaoyu-automata/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-automata/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoYu Automata&lt;/em&gt; is a reference board for &lt;em&gt;XiaoYu Micro OS&lt;/em&gt; development.It integrates a debugger as well as numerous interfaces, buttons and LEDs usingthe common MCU &lt;em&gt;STM32F412&lt;/em&gt;.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>XiaoYu Debugger</title>
       <link>https://hemashushu.github.io/works/xiaoyu-debugger/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-debugger/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoYu Debugger&lt;/em&gt; is a very simple debugger (programmer) base onCMSIS-DAP implemented using a low cost MCU &lt;em&gt;STM32F042&lt;/em&gt; and veryfew parts. Used for downloading firmware to other MCUs or debugging programs.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>XiaoYu DevKit</title>
       <link>https://hemashushu.github.io/works/xiaoyu-devkit/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-devkit/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoYu DevKit&lt;/em&gt; is a reference board for &lt;em&gt;XiaoXuan Micro&lt;/em&gt; development.It uses a low-cost MCU &lt;em&gt;STM32G070&lt;/em&gt; in LQFP package, which is easy to make andhand soldering by yourself.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>XiaoYu Micro OS</title>
       <link>https://hemashushu.github.io/works/xiaoyu-micro-os/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-micro-os/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoYu Micro OS&lt;/em&gt; is a true operating system (not RTOS) for microcontrollers (MCUs).Applications (firmware) can be run by simply downloading and configuring, withoutthe need to install development tools or compilation. Applications even run in a micro container.It completely changes the way firmware is developed and deployed.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>XiaoYu OS</title>
       <link>https://hemashushu.github.io/works/xiaoyu-os/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-os/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; is a brand new operating system built for the modern engineer&amp;rsquo;s dailyworkflow.Every application runs in secure, isolated environement with minimal privileges,requesting permissions only when needed. This also ensures a pristine system, even afteryears of use, free from accumulated clutter or hidden processes.XiaoYu OS empowers developers to directly maintain their applications, eliminating theneed for dedicated package maintainers.&lt;/p&gt;&lt;h2 id=&#34;what-makes-_xiaoyu-os_-unique&#34;&gt;What makes &lt;em&gt;XiaoYu OS&lt;/em&gt; unique?&lt;/h2&gt;&lt;p&gt;The &lt;em&gt;XiaoYu OS&lt;/em&gt; is the result of the author&amp;rsquo;s long-term thinking about operating system and human-computer interaction. It is a completely new design, from its visual appearance to its internal workings. The system includes many innovative features that make it unique.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Strict security&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Except for a few programs such as the system initializer, graphic compositor and message bus, all applications run in their own containers. Applications are granted minimal permissions, so you can run any application without worrying about it modifying your system or accessing your private data and files.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clean and tidy&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Temporary data and files generated by applications are limited to their own containers. When an application is removed, all associated cache and temporary files are automatically removed, ensuring no garbage is left in the system.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;High availability&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The system avoids the use of global dynamic shared libraries. Instead, each application bundles its own required libraries and resources, ensuring uninterrupted operation even in the face of major system updates or modifications.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/system-arch.webp&#34;         alt=&#34;An overview of the system architecture&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;An overview of the system architecture&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;p&gt;To minimize file redundancy, commonly used shared libraries are packaged into a component called &amp;ldquo;Core.&amp;rdquo; A system can simultaneously support multiple versions of &amp;ldquo;Core,&amp;rdquo; while each application can only depend on a specific version. This approach achieves a balance between reducing application size and avoiding shared libraries version compatibility and conflict issues.&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;High portability&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Unlike traditional applications that require installation and often system modifications, &lt;em&gt;XiaoYu OS&lt;/em&gt; applications are entirely portable. Simply copy the application to your system and run it immediately. Even the copying step can be bypassed; a URL representing the application suffices, and the system will automatically download and cache the necessary code and data from the internet. &lt;em&gt;XiaoYu OS&lt;/em&gt; revolutionizes not only the user experience of obtaining applications but also the developer workflow for application distribution.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Even &lt;em&gt;XiaoYu OS&lt;/em&gt; itself does not require installation. Booting &lt;em&gt;XiaoYu OS&lt;/em&gt; is as simple as copying its image to a USB Flash Disk.&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Brand new UI&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; has a brilliant, dynamic UI that prioritizes efficiency. The new UI steers clear of the shortcomings of traditional UIs, such as rigidity, monotony, and operational inconvenience. It offers a user-friendly and flexible experience that is visually appealing and consistently refreshing. (For details, please refer to the following chapters.)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;New interaction mode&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; introduces a new approach to human-computer interaction called &lt;em&gt;XiaoYu Terminal&lt;/em&gt;, which integrating CLI, GUI, dataset workbench and large language model (LLM) assistance. &lt;em&gt;XiaoYu Terminal&lt;/em&gt; empowers advanced users and engineers with an exceptionally flexible and efficient work environment. (For details, please refer to the following chapters)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Seamless Linux application compatibility&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; provides a Linux compatibility layer, which allows traditional Linux applications (including CLI programs and GUI applications) to run seamlessly with near-zero performance loss. As a result, &lt;em&gt;XiaoYu OS&lt;/em&gt; boasts a large number of high-quality, mature and professional application from the very outset.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;an-overview-of-the-ui&#34;&gt;An overview of the UI&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Colorful by design&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Applications can now ditch the standard &amp;ldquo;light&amp;rdquo; and &amp;ldquo;dark&amp;rdquo; themes and choose their own unique color schemes. You can even personalize your desktop further by assigning different colors to different apps, making your workspace truly your own.&lt;/p&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/ui/colourful.webp&#34;         alt=&#34;Colourful application apperance&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;Colourful application apperance&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Clean and uncluttered&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Forget the space-wasting status bar and rarely used search bar. The XiaoYu OS desktop is all about minimalism, featuring only the essentials: a &lt;em&gt;Launcher Button&lt;/em&gt;, &lt;em&gt;Task Manager Bar&lt;/em&gt;, and &lt;em&gt;Status Controller&lt;/em&gt;. This clutter-free environment keeps your desktop looking fresh and organized.&lt;/p&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/ui/desktop.webp&#34;         alt=&#34;XiaoYu OS Desktop&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;XiaoYu OS Desktop&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Efficiency at your fingertips&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The Launcher is designed for simplicity and speed. All your applications are listed directly, eliminating the need to navigate through submenus. Frequently used apps can be added to the &amp;ldquo;Favorites&amp;rdquo; list for even faster access.&lt;/p&gt;&lt;figure class=&#34;mid white&#34;&gt;&lt;img src=&#34;./images/ui/launcher-apps.webp&#34;         alt=&#34;The application list&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The application list&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;And for common tasks like document management, music playback, and photo viewing, the launcher provides built-in functionality, saving you the hassle of switching between multiple applications.&lt;/p&gt;&lt;div class=&#34;gallery cols-3&#34;&gt;    &lt;div class=&#34;items&#34;&gt;        &lt;div class=&#34;item&#34;&gt;        &lt;figure&gt;            &lt;img src=&#34;./images/ui/launcher-documents.webp&#34;&gt;                            &lt;figcaption&gt;&lt;p&gt;Document management&lt;/p&gt;&lt;/figcaption&gt;                    &lt;/figure&gt;    &lt;/div&gt;        &lt;div class=&#34;item&#34;&gt;        &lt;figure&gt;            &lt;img src=&#34;./images/ui/launcher-music.webp&#34;&gt;                            &lt;figcaption&gt;&lt;p&gt;Music playback&lt;/p&gt;&lt;/figcaption&gt;                    &lt;/figure&gt;    &lt;/div&gt;        &lt;div class=&#34;item&#34;&gt;        &lt;figure&gt;            &lt;img src=&#34;./images/ui/launcher-photos.webp&#34;&gt;                            &lt;figcaption&gt;&lt;p&gt;Photo viewing&lt;/p&gt;&lt;/figcaption&gt;                    &lt;/figure&gt;    &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;p&gt;&lt;strong&gt;Smart status control&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The status controller displays only the most essential information and controls, adapting to your current activity. For instance, playing music reveals additional &amp;ldquo;Now Playing&amp;rdquo; controls.&lt;/p&gt;&lt;div class=&#34;gallery cols-3&#34;&gt;    &lt;div class=&#34;items&#34;&gt;        &lt;div class=&#34;item&#34;&gt;        &lt;figure&gt;            &lt;img src=&#34;./images/ui/statusbar-now-playing.webp&#34;&gt;                            &lt;figcaption&gt;&lt;p&gt;Now Playing&lt;/p&gt;&lt;/figcaption&gt;                    &lt;/figure&gt;    &lt;/div&gt;        &lt;div class=&#34;item&#34;&gt;        &lt;figure&gt;            &lt;img src=&#34;./images/ui/statusbar-notifications.webp&#34;&gt;                            &lt;figcaption&gt;&lt;p&gt;Notifications&lt;/p&gt;&lt;/figcaption&gt;                    &lt;/figure&gt;    &lt;/div&gt;        &lt;div class=&#34;item&#34;&gt;        &lt;figure&gt;            &lt;img src=&#34;./images/ui/statusbar-calendar.webp&#34;&gt;                            &lt;figcaption&gt;&lt;p&gt;Calendar and schedule&lt;/p&gt;&lt;/figcaption&gt;                    &lt;/figure&gt;    &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;p&gt;It also offers quick access to features like calendar, schedule, and message notifications through a convenient pop-up.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Dynamic task management&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The XiaoYu OS taskbar is dynamic, displaying only currently running applications without any grouping or hiding. This ensures you can easily find the window you need with just a single click.&lt;/p&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/ui/taskbar.webp&#34;         alt=&#34;Different styles of taskbar when windows increases&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;Different styles of taskbar when windows increases&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Familiar Look and Feel&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;XiaoYu OS&amp;rsquo;s UI uses window components that are similar to the web, making it easy for both developers and designers to design application interfaces.&lt;/p&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/ui/component.webp&#34;         alt=&#34;Web style look-and-fell&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;Web style look-and-fell&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&#34;an-overview-of-the-_xiaoyu-terminal_&#34;&gt;An overview of the &lt;em&gt;XiaoYu Terminal&lt;/em&gt;&lt;/h2&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h2 id=&#34;q--a&#34;&gt;Q &amp;amp; A&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Is &lt;em&gt;XiaoYu OS&lt;/em&gt; a toy operating system?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;No, &lt;em&gt;XiaoYu OS&lt;/em&gt; is not designed for educational purposes or as a hobby project. It aims to be fully functional operating system for daily use.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Is &lt;em&gt;XiaoYu OS&lt;/em&gt; a Linux distribution?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;No, &lt;em&gt;XiaoYu OS&lt;/em&gt; is not a Linux distribution in the traditional sense. While it is based on the Linux kernel for hardware compatibility, all user-space programs are developed from scratch using &lt;em&gt;XiaoXuan Native&lt;/em&gt;, &lt;em&gt;XiaoXuan Core&lt;/em&gt;, and &lt;em&gt;Rust&lt;/em&gt;. This means that &lt;em&gt;XiaoYu OS&lt;/em&gt; does not include common Linux software packages such as &lt;em&gt;Glibc&lt;/em&gt;, &lt;em&gt;Systemd&lt;/em&gt;, &lt;em&gt;Coreutils&lt;/em&gt;, &lt;em&gt;Binutils&lt;/em&gt;, and &lt;em&gt;GCC&lt;/em&gt;, nor does it have package managers like &lt;em&gt;APT&lt;/em&gt;, &lt;em&gt;RPM&lt;/em&gt;, &lt;em&gt;DNF&lt;/em&gt;, or &lt;em&gt;Pacman&lt;/em&gt;. As a result, regular Linux programs cannot run directly on &lt;em&gt;XiaoYu OS&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;However, &lt;em&gt;XiaoYu OS&lt;/em&gt; includes a built-in &amp;ldquo;Linux compatibility layer&amp;rdquo; that allows most Linux applications to run seamlessly. You can also create &lt;em&gt;Arch&lt;/em&gt;, &lt;em&gt;Ubuntu&lt;/em&gt;, and &lt;em&gt;Fedora&lt;/em&gt;-like Linux environments within &lt;em&gt;XiaoYu OS&lt;/em&gt;, allowing you to add or remove applications using familiar methods. This is similar to WSL in Windows and Linux in ChromeOS, but with significant improvements.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Why not make &lt;em&gt;XiaoYu OS&lt;/em&gt; a Linux distribution?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;There are already many excellent and mature Liunx distributions available, such as &lt;em&gt;Arch&lt;/em&gt;, &lt;em&gt;Ubuntu&lt;/em&gt;, &lt;em&gt;Debian&lt;/em&gt;, and &lt;em&gt;Fedora&lt;/em&gt;. I believe there is no need to create &amp;ldquo;yet another Linux distribution&amp;rdquo;. Additionaly, maintaining a distribution&amp;rsquo;s software repository requires a significant amount of effort, which is beyond my personal capabilities. I am more passionate about creating a new operating system that can attract both application developers and users while reducing the burden on system developers.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;While the Linux world offers a vast collection of libraries and programs, it also carries a significant historical burden. These legacy issues can complicate simple tasks and discourage new developers and users. &lt;em&gt;XiaoYu OS&lt;/em&gt;, drawing lessons from these challenges, aims to liberate system developers, application developers, and users from these burdens by providing a completely new environment.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;How does &lt;em&gt;XiaoYu OS&lt;/em&gt; differ from &amp;ldquo;Immutable Linux&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; and &amp;ldquo;Immutable Linux&amp;rdquo; (e.g. NixOS, Fedora Silverblue) share a similar architecture, but &lt;em&gt;XiaoYu OS&lt;/em&gt; provides a completely new runtime environment, including libraries, tools, and languages.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Which desktop environment does &lt;em&gt;XiaoYu OS&lt;/em&gt; use?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; uses a custom desktop environemnt developed by me. It has its own unique look and feel, following its own UI design guidelines, and offers a more intuitive user experience.&lt;/p&gt;&lt;p&gt;The desktop environment (graphic server) is based on the Wayland display server protocal, so traditional Linux GUI programs can still run on &lt;em&gt;XiaoYu OS&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Can you briefly describe the system architecture of &lt;em&gt;XiaoYu OS&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The system architecture of &lt;em&gt;XiaoYu OS&lt;/em&gt; is very simple and straightforward. It consists of four layers:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Base System&lt;/li&gt;&lt;li&gt;Core/Runtime (providing common libraries, GUI libraries, etc.)&lt;/li&gt;&lt;li&gt;Containers&lt;/li&gt;&lt;li&gt;Applications&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;How do Linux applications run on &lt;em&gt;XiaoYu OS&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; has a lightweight &amp;ldquo;Linux Compatibility layer&amp;rdquo; that create a classic Linux file hierarchy structure, maps the user directory, and launches Linux applications through containers. From the perspective of the Linux application, it is running on a regular Linux system.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Can all Linux applications run normally on &lt;em&gt;XiaoYu OS&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Almost all Linux applications can run on &lt;em&gt;XiaoYu OS&lt;/em&gt;, except for those that modify the system or hardware. Some system programs may run but not produce correct results. For example, a program that displays network interface IP addresses will show a virtual IP address instead of the host&amp;rsquo;s real address.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Can &lt;em&gt;XiaoYu OS&lt;/em&gt; native applications communicate with Linux applications?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Yes, they can. For example, you can use &lt;em&gt;XiaoYu Terminal&lt;/em&gt; to edit a text file by calling &lt;em&gt;Vim&lt;/em&gt;. You will need to &amp;ldquo;install&amp;rdquo; a pre-packaged version of &lt;em&gt;Vim&lt;/em&gt; using &lt;em&gt;XiaoYu OS&lt;/em&gt;&amp;rsquo;s application manager.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Can you show me the disk partition layout of &lt;em&gt;XiaoYu OS&lt;/em&gt;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Sure, here is a typical &lt;em&gt;XiaoYu OS&lt;/em&gt; disk parition layout. Users can customize the layout according to their needs.&lt;/p&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/ui/disk-partition-layout.webp&#34;         alt=&#34;Disk partition layout&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;Disk partition layout&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;What is &amp;ldquo;Base System B&amp;rdquo;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt;&amp;rsquo;s &amp;ldquo;Base System&amp;rdquo; is a tiny, immutable, atomically updated base system. It contains the Linux kernel, system initializer, message bus, and other basic programs. The base system is read-only. To update the base system, you can only update from &amp;ldquo;Base System A&amp;rdquo; to &amp;ldquo;Base System B&amp;rdquo; (or vice versa). When the update is complete, the system bootloader will choose the newer version from partitions A and B when the machine boots next. The A/B system ensures that the system can always boot correctly and will not be damaged due to a half-completed update.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What happens if I run the command &lt;code&gt;sudo rm -rf /&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;On traditional Linux systems, running this command will delete all the files on the system, including the operating system and user data. This is a classic and dangerous command to misuse.&lt;/p&gt;&lt;p&gt;On immutable Linux systems, the base system is &amp;ldquo;read-only&amp;rdquo; and is therefore preserved. The machine can still be booted, but user-installed software, configurations, and data will still be lost, and the system will be restored to its inital state.&lt;/p&gt;&lt;p&gt;With &lt;em&gt;XiaoYu OS&lt;/em&gt;, the situation is different. The &lt;code&gt;rm&lt;/code&gt; command is not granted permission to delete the base system or application software, nor is it granted permission to delete the entire user data directory. Therefore, running the command &lt;code&gt;sudo rm -rf /&lt;/code&gt; will do nothing by default. If it is run in Linux compatibility mode, the command can only delete virtual files in the container, and has no effect on other containers or the host system.&lt;/p&gt;&lt;p&gt;In short, in &lt;em&gt;XiaoYu OS&lt;/em&gt;, even if you are not familiar with the system, no wrong operation will cause serious consequences.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;It is worth mentioning that the &lt;code&gt;rm&lt;/code&gt; command in &lt;em&gt;XiaoYu OS&lt;/em&gt; has been rewritten. Delteted files will be put in the &amp;ldquo;Recycle Bin&amp;rdquo; instead of disappearing directly, so even if you delete the wrong file, you can still recover it.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;&lt;p&gt;Linux is my primary desktop operaing system. The more I learn about it, the more I appreciate its power and greatness. I am also grateful to the hundreds of developers and maintainers who have contributed to this system. However, like many Linux fans, I have encountered countless confusing problems over the years, each of which has cost me several nights of sleep. I have also tried dozens of distributions and switched between GNOME and KDE countless times.&lt;/p&gt;&lt;p&gt;As as result, an immature idea gradually emerged: I want to create a different Linux distribution, an operating system that saves users trouble.&lt;/p&gt;&lt;p&gt;It didn&amp;rsquo;t take long for me to implement a system initializer, a container service, and other basic programs in the C language, completing a simple prototype. Later, after learning the Rust language, I rewrote these programs in Rust. Now that I have my own progamming language and compiler, I am ready to switch to the XiaoXuan Lang.&lt;/p&gt;&lt;p&gt;During this time, I began to have second thoughts about my original idea. I realized that it is not enough to just solve user-side problems. In the Linux environment, application (mainly desktop application) developers and system maintainers also encounter many frustrating problems, and creating a &amp;ldquo;special Linux distribution&amp;rdquo; or a &amp;ldquo;immutable Linux&amp;rdquo; will not change that.&lt;/p&gt;&lt;p&gt;Therefore, I believe that we should rethink the design of the entire system. The new system should absorb the advantages of other modern systems, provide new development tools (programming languages) and libraries, reduce the burden on developers, and reduce the problems encountered by users. At the same time, it should use certain mechanisms to allow traditional Linux applications to run normally. Just as Android and ChromeOS, which are also based on the Linux kernel, have been successful on mobile devices and netbooks, I believe that the new system has the potential to succeed on the desktop.&lt;/p&gt;&lt;p&gt;This is the origin of the &lt;em&gt;XiaoYu OS&lt;/em&gt; project.&lt;/p&gt;&lt;p&gt;However, developing a new system is a huge undertaking. XiaoYu OS is just getting started, so there are no programs to download or experience yet. In the future, I will continue to add document to the project, complete the development of basic programs, and update information will be published in the blog section of this website.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;If you think my project is meaningful, please consider sponsoring me. This is really important for a project that requires a long time commitment, thank you!&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&#34;related-projects&#34;&gt;Related projects&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoYu UEFI&lt;/span&gt; a bootloader for XiaoYu OS&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Core</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-core/</link>
       <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-core/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core Programming Language&lt;/em&gt; is used to build powerful user-space system programs with extremely fast startup speed and small footprint, it can directly call &lt;em&gt;syscall&lt;/em&gt; and interoperate with C shared libraries. Single-file, statically linked runtime make applications highly portable.&lt;/p&gt;&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;&lt;p&gt;The following code demostrates how to call syscalls and external functions (from shared libraries). The code prints the current working directory.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Create a file named &lt;code&gt;pwd.anc&lt;/code&gt; in any directory with the following content:&lt;/li&gt;&lt;/ol&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;runtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;shared&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;libc.so.6&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;buf_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&amp;lt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;buf_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// invoke syscall&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getcwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;raw_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// call external function&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;raw_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&lt;li&gt;&lt;p&gt;Download the &lt;em&gt;XiaoXuan Core&lt;/em&gt; launcher &lt;span class=&#34;null-link&#34;&gt;ancl-1.0.1.x86_64-linux-gnu.tar.gz&lt;/span&gt; from the offical website and extract it to the &lt;code&gt;~/.local/bin&lt;/code&gt; or &lt;code&gt;/usr/bin&lt;/code&gt; directory.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Run the following command:&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;$ ancl pwd.anc&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The launcher will first check the version of the runtime required by the application and then start the corresponding runtime to execute it.&lt;/p&gt;&lt;p&gt;Since this is the first time we are running an &lt;em&gt;XiaoXuan Core&lt;/em&gt; application, the launcher will download the runtime from the internet. Then the runtime will compile and cache the application on-the-fly. Finally, you should see the application output a line of text, which is the current working directory.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core&lt;/em&gt; standard library provides simpler ways to get the current working directory or print strings. The code below is written for demostration purposes only. Additionally, the following steps assume a Linux operation system. If you are using other platform or want to try a simpler &amp;ldquo;Hello, World!&amp;rdquo; program, please refer to the &lt;span class=&#34;null-link&#34;&gt;XiaoXuan Code Documentation&lt;/span&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&#34;the-xiaoxuan-core-vm&#34;&gt;The XiaoXuan Core VM&lt;/h2&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/vm-model.webp&#34;         alt=&#34;The XiaoXuan Core VM&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The XiaoXuan Core VM&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Runtime&lt;/em&gt; is a self-contained, statically linked executable that combines a compiler and a virtual machine (VM) designed specifically for running system programs. It offers serveral key advantages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Fast loading:&lt;/strong&gt; The structure of the application&amp;rsquo;s image file and the instruction set architecture (ISA) are specially designed to eliminate the need for parsing and preprocessing by the VM. Instead, the file is simply mapped to memory and the bytecode can be executed directly.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Program security:&lt;/strong&gt; The &lt;em&gt;XiaoXuan Core VM&lt;/em&gt; uses indexes instead of pointers to locate functions, data, and local variables. The stack is also divided into three separate stack: frame information, local variables, and operands. This effectively prevents memory boundary and overflow issues, reducing program vulnerabilities.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Seamless interoperability with C/C++/Rust shared libraries:&lt;/strong&gt; The VM&amp;rsquo;s memory model closely resembles that of the local native machine, allowing VM functions to directly call shared libraries built in C/C++/Rust. Additionally, VM functions can be also passed to shared libraries as callback functions (enabling shared libraries to call back into the VM). This feature allows &lt;em&gt;XiaoXuan Core&lt;/em&gt; to take full advantage of the rich ecosystem of existing shared libraries.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Data-race-free parallelism model:&lt;/strong&gt; The &lt;em&gt;XiaoXuan Core VM&lt;/em&gt; has no &amp;ldquo;global data&amp;rdquo;, and threads are only allowed to communicate by passing copies of data through &lt;em&gt;channels&lt;/em&gt;. This prevent data races and ensures thread safety.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Embeddable in Rust applications:&lt;/strong&gt; &lt;em&gt;XiaoXuan Core&lt;/em&gt; programs and the VM can be embedded as a library in Rust applications. Rust can then call VM functions just like regular functions (using a JIT generated &amp;ldquo;bridge function&amp;rdquo;).&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Availability and portability&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Traditional system programs, as well as command-line utilities, can be difficult for ordinary users to set up and run if they are not maintained by a distribution and have not been updated for a while, this is because:&lt;/p&gt;&lt;p&gt;For applications built with compiled languages, may encounter excessive dependencies that require manual compilation during the build process, or compilation may fail due to changes in shared library version.&lt;/p&gt;&lt;p&gt;For applications built with script languages, may encounter version incompatibility issues, or may encounter dependency version conflict issues.&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Core&lt;/em&gt; has learned from these lessons and is designed to ensure that once an application is created and can run, it will continue to run correctly even if it is not maintained and after a long period of time.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Ease of development, maintaince, and high performance&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core&lt;/em&gt; language strikes a good balance between &amp;ldquo;ease of development&amp;rdquo; and &amp;ldquo;high performance&amp;rdquo;. The &lt;em&gt;XiaoXuan Core&lt;/em&gt; language has the following features:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Data-race-free concurrency model&lt;/li&gt;&lt;li&gt;GC-free automatic memory management&lt;/li&gt;&lt;li&gt;Discards difficult-to-master concepts such as pointers, ownership, borrow checking and lifetimes.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These features make it easy for developers to develop safe, stable and high-performance applications.&lt;/p&gt;&lt;h2 id=&#34;how-xiaoxuan-core-solves-verison-compatibility-issues&#34;&gt;How XiaoXuan Core solves verison compatibility issues?&lt;/h2&gt;&lt;p&gt;&lt;em&gt;XiaoXiao Core&lt;/em&gt; applications can maintain correct operation even when the runtime environment changes (e.g., major version changes to the shared libraries in the system). This is achieved through the following two measures:&lt;/p&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/version-model.webp&#34;         alt=&#34;The XiaoXuan Core Applications Version Control&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The XiaoXuan Core Applications Version Control&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;ol&gt;&lt;li&gt;Runtime version specification&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Each &lt;em&gt;XiaoXuan Core&lt;/em&gt; application is required to specify a runtime version number. For single-file applications, this is specified using the &lt;code&gt;config(runtime, &amp;quot;1.0&amp;quot;)&lt;/code&gt; statement. For multi-file applications, it is specified in the package descriptor file &lt;code&gt;package.anon&lt;/code&gt;, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;myapp&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;runtime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.1&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core Application Launcher&lt;/em&gt; (&lt;code&gt;ancl&lt;/code&gt;) will start the corresponding runtime based on the version number specified by the application to compile or run.&lt;/p&gt;&lt;ol start=&#34;2&#34;&gt;&lt;li&gt;Bundled shared modules and shared libraries&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Each verson of the runtime comes with its own shared modules (e.g., &lt;code&gt;std&lt;/code&gt; and &lt;code&gt;math&lt;/code&gt;) and, most importantly, a set of dynamic shared libraries (e.g., &lt;code&gt;libc&lt;/code&gt;, &lt;code&gt;libsqlite3&lt;/code&gt;, &lt;code&gt;libz&lt;/code&gt; etc.). This allows applications to not rely on the shared libraries of the OS.&lt;/p&gt;&lt;p&gt;Therefore, whether the &lt;em&gt;XiaoXuan Core&lt;/em&gt; runtime is updated or the system shared library versions change, the application can run in the same environment as it was developed in.&lt;/p&gt;&lt;p&gt;This feature improves application compatibility and stability, reduces dependency on the system environment, simplifies application deployment and maintenance.&lt;/p&gt;&lt;h2 id=&#34;get-started&#34;&gt;Get started&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Core in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;manuals--tutorials&#34;&gt;Manuals &amp;amp; Tutorials&lt;/h2&gt;&lt;!-- raw HTML omitted --&gt; &lt;ul class=&#34;card&#34;&gt; &lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c1&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;M01 - The XiaoXuan Programming Language Reference&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;Syntax, fundamental, and the standard library&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-04-16&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data types and Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Variables&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Functions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Collection&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Error Handling&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Method, Generic and Interface&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Pattern&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Chain&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Modules, Packages and Properties&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Annotations and IoC&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Macro&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c2&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;M02 - An introduction to the XiaoXuan Core Assembly&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;The syntax, structure, and the VM instructions&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-09-10&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Module Nodes&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Instructions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Function Call&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;System Call&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Environment Call&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Packages and Modules&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c3&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;M03 - An introduction to the XiaoXuan Core Intermediate Representation (IR)&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;The syntax, structure and modules&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-10-12&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data Types and Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Functions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Struct and Array&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Packages and Modules&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c4&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;S71 - Designing a Runtime Virtual Machine (VM) for Systems Programming&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;The memory, stack and the concurrency model of XiaoXuan Core VM&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-06-13&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data types and thoughts on floating-pointer numbers&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The triadic stack&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Using indexes instead of pointer&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The instruction set&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Using structured blocks instead of jumps for control flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Tail call optimization&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Environment calls&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;System calls&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Bridge functions and external calls&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;A Data-race-free parallel Model&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c5&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;S80 - Zero to OS: Building Your Own Usable Operating System, Volumn 1: The User Space&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;Build the user-space part of an OS for RISC-V platform from scratch in XiaoXuan Core&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-09&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Set up a RISC-V virtual machine using QEMU&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `init` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `shell` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Fundamentals of file system and processes, implementing the `pwd` and `ls` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Implement the `mount` and `umount` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principals of `redirect`, implementing the `echo` and `cat` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principal of `pipe`, implementing the `tee` and `tr` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Session and process groups&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The `root` privileges, users and groups, and the `setuid` bit&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Add support for shell scripts&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c6&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;S82 - Building a Docker-like Container Utility from Scratch using XiaoXuan Core&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;Linux namespaces, capabilities, seccomp and virtual networking&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-15&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The principal of Linux container&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the file system&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the process space&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the accounts&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The virtual networking devices and route&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;/ul&gt; &lt;h2 id=&#34;related-documents&#34;&gt;Related documents&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;An introduction to the XiaoXuan Core application image file format&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Object Notation (ANON): a Human-readable object notation format&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Allocator: a low-latency, scalable memory allocator&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;related-projects&#34;&gt;Related projects&lt;/h2&gt;&lt;p&gt;The source code repositories of related projects:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core VM&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Assembly&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core IR&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Compiler&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Runtime&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Launcher&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Standard Library&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Allocator&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Object Notation (ANON)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Core - Simplified Chinese Edition (简体中文版)</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-core-hans/</link>
       <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-core-hans/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Core Hans&lt;/em&gt; is the simplified Chinese edition (简体中文版) of XiaoXuan Core&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Programming Language</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-lang/</link>
       <pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-lang/</guid>
       <description>&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Language&lt;/em&gt; is a full-stack programming language that allows you to learn one language to develop all kinds of programs.&lt;/p&gt;&lt;p&gt;Currently, it can be used to develop a variety applications, including digital circuits and chips, microcontroller programs, GPU shaders, system programs, local native programs, cloud native programs, web applications and more.&lt;/p&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Language&lt;/em&gt; achieves this by providing multiple backends and variants, all of which follow the same syntax and design philosophy. This frees developers from the burden of learning multiple programming languages and tools.&lt;/p&gt;&lt;figure class=&#34;mid&#34;&gt;&lt;img src=&#34;./images/title.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Language&lt;/em&gt; consists of the following variants:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-core&#34;&gt;XiaoXuan Core&lt;/a&gt;Build powerful user-space system programs that have extremely fast startup speed and small memory footprint, it can directly call &lt;em&gt;syscall&lt;/em&gt; and interoperate with C shared libraries. Single-file, statically linked runtime make applications highly portable.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-script&#34;&gt;XiaoXuan Script&lt;/a&gt;Build high-performance, solid web applications. It can be compiled to WebAssembly on-the-fly without the need for any build tools. It aims to be the next programming language for web development.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-managed&#34;&gt;XiaoXuan Managed&lt;/a&gt;Build extremely secure, robust, truly portable and responsive programs, including desktop applications, cloud-native applications (such as microservices and serverless functions etc.), business systems, data science and A.I. programs and more. Each program runs in its own isolated environement, eliminating the need for containers. Applications do not need to be installed, they can be run with just a URL.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-native&#34;&gt;XiaoXuan Native&lt;/a&gt;A memory-safe, general-purpose programming language inspired by Rust. It is designed to be simpler than Rust while it still provides automatic memory management without garbage collection, and avoids complex concepts such as ownership, borrow checking, and lifetimes. It aims to replace Rust in certain non-critical scenarios. It currently supports compiling to native code for architectures &lt;em&gt;x86-64&lt;/em&gt;, &lt;em&gt;aarch64 (ARM64)&lt;/em&gt;, &lt;em&gt;riscv64&lt;/em&gt; and &lt;em&gt;s390x (IBM Z)&lt;/em&gt;, and will supports &lt;em&gt;loongarch64&lt;/em&gt; in the future.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-gpu&#34;&gt;XiaoXuan GPU&lt;/a&gt;A modern shading language designed to facilitate the rapid development of high-performance programs such as game engines, AR, AI engines, data analysis, biocomputing, scientific computing, and more. It features the same elegant syntax and design philosophy as the &lt;em&gt;XiaoXuan Lang&lt;/em&gt;, allowing you to develop in new domains without learning a new language.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-micro&#34;&gt;XiaoXuan Micro&lt;/a&gt;Build high-performance firmware for microcontroller (MCU) easily, the built-in micro VM makes it possible to &amp;ldquo;write once, run anywhere&amp;rdquo;, build IoT applications in a more modern way.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-logic&#34;&gt;XiaoXuan Logic&lt;/a&gt;A brand new and modern hardware description language (HDL) that lets you design hardware and chips in the same ease and collaboration as open-source software. Its built-in GPU-accelerated simulator dramatically enhances test efficiency, saving you valuable time and resources.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/variants.webp&#34;         alt=&#34;The XiaoXuan Programming Language Family&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The XiaoXuan Programming Language Family&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&#34;localization&#34;&gt;Localization&lt;/h2&gt;&lt;p&gt;&lt;em&gt;The XiaoXuan Language&lt;/em&gt; supports writing code in local languages, such as Chinese, Japanese and French. In addition to keywords, the standard library and related documentation are also translated into local languages. Using local language programming is beneficial for children, beginners and non-computer majors who are not native English speakers.&lt;/p&gt;&lt;p&gt;The local language variants are as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-core-hans&#34;&gt;XiaoXuan Core Hans&lt;/a&gt; - The simplified Chinese edition (简体中文版) of XiaoXuan Core.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;which-one-should-i-choose&#34;&gt;Which one should I choose?&lt;/h2&gt;&lt;p&gt;There are three variants designed for specialized application development:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;XiaoXuan Script: for building web applications.&lt;/li&gt;&lt;li&gt;XiaoXuan Micro: for building microcontroller firmware.&lt;/li&gt;&lt;li&gt;XiaoXuan Logic: for developing hardware such as digital circuits and chips.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The other three variants are general-purpose programming languages. However, the assets they generate run differently, so they have different focuses:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;XiaoXuan Core: for building command-line tools, system programs.&lt;/li&gt;&lt;li&gt;XiaoXuan Managed: for building server-side service programs, business systems, data processing programs, and desktop applicatons.&lt;/li&gt;&lt;li&gt;XiaoXuan Native: for building performance-critical native applications.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;where-to-get-started&#34;&gt;Where to get started&lt;/h2&gt;&lt;p&gt;If you are a beginner in XiaoXuan Programming Language, it is recommended to start with XiaoXuan Script. Because it doesn&amp;rsquo;t require you to download or install any programs, there is an online testing page on the project&amp;rsquo;s web site where you can write and run XiaoXuan Script programs to learn about the syntax and main features.&lt;/p&gt;&lt;p&gt;If you perfer to write programs that run locally, it is recommended to start with XiaoXuao Core, which makes it very easy to write utilities. Once you are familiar with XiaoXuan Core, it will be easier to move on to XiaoXuan Managed and XiaoXuan Native.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Script in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Core in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;language-features&#34;&gt;Language features&lt;/h2&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h2 id=&#34;example-program&#34;&gt;Example program&lt;/h2&gt;&lt;p&gt;TODO&lt;/p&gt;&lt;h2 id=&#34;manuals--tutorials&#34;&gt;Manuals &amp;amp; Tutorials&lt;/h2&gt;&lt;!-- raw HTML omitted --&gt; &lt;ul class=&#34;card&#34;&gt; &lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c1&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;M01 - The XiaoXuan Programming Language Reference&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;Syntax, fundamental, and the standard library&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-04-16&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data types and Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Variables&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Functions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Collection&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Error Handling&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Method, Generic and Interface&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Pattern&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Chain&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Modules, Packages and Properties&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Annotations and IoC&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Macro&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c5&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;S80 - Zero to OS: Building Your Own Usable Operating System, Volumn 1: The User Space&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;Build the user-space part of an OS for RISC-V platform from scratch in XiaoXuan Core&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-09&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Set up a RISC-V virtual machine using QEMU&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `init` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `shell` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Fundamentals of file system and processes, implementing the `pwd` and `ls` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Implement the `mount` and `umount` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principals of `redirect`, implementing the `echo` and `cat` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principal of `pipe`, implementing the `tee` and `tr` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Session and process groups&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The `root` privileges, users and groups, and the `setuid` bit&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Add support for shell scripts&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c6&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;span class=&#34;null-link&#34;&gt;S82 - Building a Docker-like Container Utility from Scratch using XiaoXuan Core&lt;/span&gt;&lt;/h3&gt;                &lt;/div&gt;                &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                &lt;div class=&#34;subheading&#34;&gt;Linux namespaces, capabilities, seccomp and virtual networking&lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-15&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The principal of Linux container&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the file system&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the process space&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the accounts&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The virtual networking devices and route&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;/ul&gt; </description>
     </item>
   
     <item>
       <title></title>
       <link>https://hemashushu.github.io/works/xiaoxuan-script-object-notation/</link>
       <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-script-object-notation/</guid>
       <description>&lt;h1 id=&#34;xiaoxuan-script-object-notation&#34;&gt;XiaoXuan Script Object Notation&lt;/h1&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Script Object Notation&lt;/em&gt; (&lt;em&gt;ANON&lt;/em&gt;) is a data format that is easy for humans to read and write. It is similar to &lt;em&gt;JSON&lt;/em&gt;, but has many improvements and enhancements.&lt;/p&gt;&lt;p&gt;&lt;em&gt;ANON&lt;/em&gt; is mainly used as a configuration file for applications, but can also be used for data transmission.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Compatible with most of the syntax of &lt;em&gt;JSON&lt;/em&gt; and &lt;em&gt;JSON5&lt;/em&gt;.&lt;/strong&gt; If you are already familiar with &lt;em&gt;JSON&lt;/em&gt;, you do not need to learn a new data format.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Simple, rigorous and consistent syntax.&lt;/strong&gt; The syntax of &lt;em&gt;ASON&lt;/em&gt; is close to that of programming languages. For example, numbers can specify data types, multiple formats of comments and strings are supported, key names do not need to be enclosed in double quotes, trailing commas can be omitted, and so on. These features can help users accurately express the data they need, and are also facilitate the modification and maintenance of &lt;em&gt;ASON&lt;/em&gt; documents.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#ason-document-example&#34;&gt;ASON Document Example&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#comparison-with-json&#34;&gt;Comparison with JSON&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#file-extension&#34;&gt;File Extension&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#shared-library-and-api&#34;&gt;Shared Library and API&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#rust-ason-shared-library&#34;&gt;Rust ASON Shared Library&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#specification&#34;&gt;Specification&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#numbers&#34;&gt;Numbers&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#integers&#34;&gt;Integers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#decimal-floating-point-numbers&#34;&gt;Decimal Floating-Point Numbers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#hexadecimal-floating-point-numbers&#34;&gt;Hexadecimal Floating-Point Numbers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#data-types-of-numbers&#34;&gt;Data Types of Numbers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#metric-prefixes&#34;&gt;Metric Prefixes&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#boolean&#34;&gt;Boolean&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#characters&#34;&gt;Characters&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#unicode-escape-characters&#34;&gt;Unicode Escape Characters&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#strings&#34;&gt;Strings&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#long-strings&#34;&gt;Long Strings&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#multiline-strings&#34;&gt;Multiline Strings&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#raw-strings&#34;&gt;Raw Strings&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#trimmed-strings&#34;&gt;Trimmed Strings&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#dates&#34;&gt;Dates&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#byte-data&#34;&gt;Byte Data&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#arrays&#34;&gt;Arrays&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#trailing-commas&#34;&gt;Trailing Commas&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#array-types&#34;&gt;Array Types&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#tuples&#34;&gt;Tuples&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#objects&#34;&gt;Objects&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#nesting&#34;&gt;Nesting&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#variants&#34;&gt;Variants&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#using-variants-to-replace-null&#34;&gt;Using Variants to Replace &lt;code&gt;null&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#default-value-of-object-fields&#34;&gt;Default Value of Object Fields&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#comments&#34;&gt;Comments&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#line-comments&#34;&gt;Line Comments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#block-comments&#34;&gt;Block Comments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#documentation-comments&#34;&gt;Documentation Comments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#mixed-comments&#34;&gt;Mixed Comments&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;!-- raw HTML omitted --&gt;&lt;h2 id=&#34;ason-document-example&#34;&gt;ASON Document Example&lt;/h2&gt;&lt;p&gt;A typical &lt;em&gt;ASON&lt;/em&gt; document contains only one &lt;em&gt;ASON&lt;/em&gt; object. The following is a example of an &lt;em&gt;ASON&lt;/em&gt; document:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;string:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;raw_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[a-z]+&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;number_with_data_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;789&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@long&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.14&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;6.626e-34&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@double&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2023-03-24 12:30:00+08:00&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;variant_with_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;Some(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;variant_without_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;true)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;object:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;leaf&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is worth mentioning that an &lt;em&gt;ASON&lt;/em&gt; document does not necessarily have to be an &lt;em&gt;ASON&lt;/em&gt; object, it can also be other &lt;em&gt;ASON&lt;/em&gt; values, such as an array, a tuple, or even a single number or string, all of which are valid &lt;em&gt;ASON&lt;/em&gt; values.&lt;/p&gt;&lt;h2 id=&#34;comparison-with-json&#34;&gt;Comparison with JSON&lt;/h2&gt;&lt;p&gt;The &lt;em&gt;ASON&lt;/em&gt; format is very similar to the &lt;em&gt;JSON&lt;/em&gt; format, but there are a few significant differences:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Numbers can have explicit data types.&lt;/li&gt;&lt;li&gt;Floating-point numbers do not support values such as &lt;code&gt;Inf&lt;/code&gt;, &lt;code&gt;-Inf&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Hexadecimal and binary numbers are supported.&lt;/li&gt;&lt;li&gt;The &lt;code&gt;null&lt;/code&gt; value is not allowed, and is replaced by a new type called &lt;code&gt;Variant&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Object keys do not support double quotes.&lt;/li&gt;&lt;li&gt;Strings do not support single quotes.&lt;/li&gt;&lt;li&gt;Arrays require all of their elements to be of the same data type.&lt;/li&gt;&lt;li&gt;Multiple formats of strings and comments are supported.&lt;/li&gt;&lt;li&gt;&lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Tuple&lt;/code&gt;, and &lt;code&gt;Variant&lt;/code&gt; data types are added.&lt;/li&gt;&lt;li&gt;Trailing commas can be omitted.&lt;/li&gt;&lt;li&gt;A comma can be added to the end of the last element of an array, tuple, or object.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;file-extension&#34;&gt;File Extension&lt;/h2&gt;&lt;p&gt;The file extension for &lt;em&gt;ASON&lt;/em&gt; document is &lt;code&gt;*.ason&lt;/code&gt;. Filename example:&lt;/p&gt;&lt;p&gt;&lt;code&gt;sample.ason&lt;/code&gt;, &lt;code&gt;package.ason&lt;/code&gt;&lt;/p&gt;&lt;h2 id=&#34;shared-library-and-api&#34;&gt;Shared Library and API&lt;/h2&gt;&lt;p&gt;Currently, only the Rust implementation of &lt;em&gt;ASON&lt;/em&gt; serialization and deserialization library is provided.&lt;/p&gt;&lt;h3 id=&#34;rust-ason-shared-library&#34;&gt;Rust ASON Shared Library&lt;/h3&gt;&lt;p&gt;Run the command &lt;code&gt;cargo add ason&lt;/code&gt; in your project directory to add the &lt;em&gt;ASON&lt;/em&gt; library to your project.&lt;/p&gt;&lt;p&gt;This library provides two functions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;fn parse(s: &amp;amp;str) -&amp;gt; Result&amp;lt;AsonNode, ParseError&amp;gt;&lt;/code&gt; for deserialization;&lt;/li&gt;&lt;li&gt;&lt;code&gt;fn format(n: &amp;amp;AsonNode) -&amp;gt; String&lt;/code&gt; for serialization.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Deserialization&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Suppose you have the following &lt;em&gt;ASON&lt;/em&gt; text, which may come from a file or from the internet:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following code shows how to parse this text into an &lt;em&gt;ASON&lt;/em&gt; object and check the value of each member:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// the ASON text above&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsonNode&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;assert_eq!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NameValuePair&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;nb&#34;&gt;Box&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsonNode&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NumberLiteral&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;assert_eq!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NameValuePair&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;s&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;nb&#34;&gt;Box&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsonNode&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;String_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Serialization&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Suppose there is an object with two fields, their names and values are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;name: &amp;ldquo;foo&amp;rdquo;&lt;/li&gt;&lt;li&gt;version: &amp;ldquo;0.1.0&amp;rdquo;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The following code demonstrates how to convert this object into &lt;em&gt;ASON&lt;/em&gt; text:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsonNode&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;vec!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NameValuePair&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;s&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;nb&#34;&gt;Box&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsonNode&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;String_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NameValuePair&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;s&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;nb&#34;&gt;Box&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsonNode&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;String_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output text should be:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;random&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;regex&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;Some(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;&lt;p&gt;An &lt;em&gt;ASON&lt;/em&gt; document can only have one &lt;em&gt;ASON&lt;/em&gt; value.&lt;/p&gt;&lt;p&gt;An &lt;em&gt;ASON&lt;/em&gt; value can be either simple data, such as a number, a date, or a string. It can also be complex data composed of multiple simple &lt;em&gt;ASON&lt;/em&gt; values, such as an &lt;code&gt;Object&lt;/code&gt;, an &lt;code&gt;Array&lt;/code&gt;, a &lt;code&gt;Tuple&lt;/code&gt;, or a &lt;code&gt;Variant&lt;/code&gt;.&lt;/p&gt;&lt;h3 id=&#34;numbers&#34;&gt;Numbers&lt;/h3&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; supports two types of numbers: integers and floating-point numbers.&lt;/p&gt;&lt;p&gt;Each &lt;em&gt;ASON&lt;/em&gt; number has a specific data type. By default, a number is first inferred to be an integer, and its data type is &lt;code&gt;int&lt;/code&gt; (i.e. &lt;code&gt;i32&lt;/code&gt;). If the number contains a decimal point or the letter &amp;ldquo;e&amp;rdquo; representing a power of 10, then the number will be inferred to be a floating-point number, and its data type is &lt;code&gt;float&lt;/code&gt; (i.e. &lt;code&gt;f32&lt;/code&gt;).&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; floating-point numbers do not support &lt;code&gt;-0.0&lt;/code&gt;, &lt;code&gt;+Inf&lt;/code&gt;, &lt;code&gt;-Inf&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;All numbers can be preceded by a minus sign &amp;ldquo;-&amp;rdquo; to represent a negative number, but a plus sign &amp;ldquo;+&amp;rdquo; is not allowed (because the default is positive). One or more underscore &amp;ldquo;_&amp;rdquo; characters can be added between any two digits to represent grouping, and the &lt;em&gt;ASON&lt;/em&gt; parser will automatically ignore the underscore characters between digits.&lt;/p&gt;&lt;h4 id=&#34;integers&#34;&gt;Integers&lt;/h4&gt;&lt;p&gt;Integers can be represented in three formats: decimal, hexadecimal, and binary. The following are all valid integers:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Decimal: &lt;code&gt;211&lt;/code&gt;, &lt;code&gt;223_211&lt;/code&gt;, &lt;code&gt;-2027&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Hexadecimal: &lt;code&gt;0x1113&lt;/code&gt;, &lt;code&gt;0x1719_abcd&lt;/code&gt;, &lt;code&gt;-0xaabb&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Binary: &lt;code&gt;0b1100&lt;/code&gt;, &lt;code&gt;0b1010_0001&lt;/code&gt;, &lt;code&gt;-0b1100&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; does not support octal integers, for example &lt;code&gt;0o755&lt;/code&gt; is an invalid number, and &lt;code&gt;0644&lt;/code&gt; is equivalent to &lt;code&gt;644&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 id=&#34;decimal-floating-point-numbers&#34;&gt;Decimal Floating-Point Numbers&lt;/h4&gt;&lt;p&gt;When a number contains a period &amp;ldquo;.&amp;rdquo;, the number will be inferred to be a floating-point number. In addition, &lt;em&gt;ASON&lt;/em&gt; numbers also support scientific notation, that is: using the letter &amp;ldquo;e&amp;rdquo; and a positive or negative integer to represent a power of 10. Obviously, when a number contains the letter &amp;ldquo;e&amp;rdquo;, it will also be inferred to be a floating-point number.&lt;/p&gt;&lt;p&gt;Here are some examples of decimal floating-point numbers:&lt;/p&gt;&lt;p&gt;&lt;code&gt;3.14&lt;/code&gt;, &lt;code&gt;-2.718&lt;/code&gt;, &lt;code&gt;0.123&lt;/code&gt;, &lt;code&gt;123.0&lt;/code&gt;, &lt;code&gt;2.998e8&lt;/code&gt;, &lt;code&gt;6.626e-34&lt;/code&gt;, &lt;code&gt;-1.7588e+11&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Note that a floating-point number cannot start with a period &amp;ldquo;.&amp;rdquo; or the letter &amp;ldquo;e&amp;rdquo;, nor can it end with a period &amp;ldquo;.&amp;rdquo; or the letter &amp;ldquo;e&amp;rdquo;. The following are invalid numbers:&lt;/p&gt;&lt;p&gt;&lt;code&gt;.123&lt;/code&gt;, &lt;code&gt;123.&lt;/code&gt;, &lt;code&gt;e123&lt;/code&gt;, &lt;code&gt;123e&lt;/code&gt;&lt;/p&gt;&lt;h4 id=&#34;hexadecimal-floating-point-numbers&#34;&gt;Hexadecimal Floating-Point Numbers&lt;/h4&gt;&lt;p&gt;Inside a computer, decimal floating-point numbers sometimes lose precision due to rounding (i.e., the number you write will be approximated). When you need to represent a floating-point number accurately, you can use hexadecimal.&lt;/p&gt;&lt;p&gt;The format of a hexadecimal floating-point number is &lt;code&gt;0xh.hhhp±d&lt;/code&gt;, which is the same as the format of a &lt;a href=&#34;https://en.cppreference.com/w/c/language/floating_constant&#34;&gt;hexadecimal floating-point consant/literal&lt;/a&gt; in C/C++. For example, &lt;code&gt;0x1.23p4&lt;/code&gt; represents &lt;code&gt;(1x16^0 + 2x16^-1 + 3x16^-2) x 2^4 = (1.13671875 x 16)&lt;/code&gt;, and its value is &lt;code&gt;18.1875&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Here are some examples of hexadecimal floating-point numbers:&lt;/p&gt;&lt;p&gt;&lt;code&gt;0x1.921fb6p1&lt;/code&gt;, &lt;code&gt;0x1.5bf0a8b145769p+1&lt;/code&gt;, &lt;code&gt;0x1.23p-4&lt;/code&gt;, &lt;code&gt;-0x1.23p4&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Note that the letter &amp;ldquo;p&amp;rdquo; and its following positive or negative integer cannot be omitted. For example, &lt;code&gt;0x3.14&lt;/code&gt; and &lt;code&gt;0x3.14p&lt;/code&gt; are both invalid numbers.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; does not support binary floating-point numbers. For example, &lt;code&gt;0b11.10&lt;/code&gt; is an invalid number.&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 id=&#34;data-types-of-numbers&#34;&gt;Data Types of Numbers&lt;/h4&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; supports the following data types for numbers:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;8-bit integer: &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;ubyte&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt;, &lt;code&gt;u8&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;16-bit integer: &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;ushort&lt;/code&gt;, &lt;code&gt;i16&lt;/code&gt;, &lt;code&gt;u16&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;32-bit integer: &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;uint&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, &lt;code&gt;u32&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;64-bit integer: &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;ulong&lt;/code&gt;, &lt;code&gt;i64&lt;/code&gt;, &lt;code&gt;u64&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;32-bit floating-point number (i.e., single-precision): &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;f32&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;64-bit floating-point number (i.e., double-precision): &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;f64&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that there are two styles for the data type names: one is the C language style, such as &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, and &lt;code&gt;float&lt;/code&gt;; the other is the Rust language style, such as &lt;code&gt;i16&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, and &lt;code&gt;f32&lt;/code&gt;. Although the names are different, they are equivalent.&lt;/p&gt;&lt;p&gt;You can explicitly specify the data type of a number by adding the &amp;ldquo;@&amp;rdquo; symbol and the data type name to the end of the number. For example, &lt;code&gt;11@long&lt;/code&gt; represents the &lt;code&gt;long&lt;/code&gt; type number &lt;code&gt;11&lt;/code&gt;, and &lt;code&gt;3.14@double&lt;/code&gt; represents the &lt;code&gt;double&lt;/code&gt; type numbers &lt;code&gt;3.14&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If a number does not explicitly specify its data type, then for integers, its default data type is &lt;code&gt;int&lt;/code&gt; (i.e., &lt;code&gt;i32&lt;/code&gt;), and for floating-point numbers it is &lt;code&gt;float&lt;/code&gt; (i.e., &lt;code&gt;f32&lt;/code&gt;).&lt;/p&gt;&lt;h4 id=&#34;metric-prefixes&#34;&gt;Metric Prefixes&lt;/h4&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; supports adding a &lt;a href=&#34;https://en.wikipedia.org/wiki/Metric_prefix&#34;&gt;metric prefix&lt;/a&gt; to the end of a number to represent a multiple or fraction of a unit.&lt;/p&gt;&lt;h5 id=&#34;integer-prefixes&#34;&gt;Integer Prefixes&lt;/h5&gt;&lt;p&gt;For integers, &lt;em&gt;ASON&lt;/em&gt; supports the following prefixes:&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Prefix&lt;/th&gt;&lt;th&gt;10^n&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;E&lt;/td&gt;&lt;td&gt;10^18&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;P&lt;/td&gt;&lt;td&gt;10^15&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;T&lt;/td&gt;&lt;td&gt;10^12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;G&lt;/td&gt;&lt;td&gt;10^9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M&lt;/td&gt;&lt;td&gt;10^6&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;K&lt;/td&gt;&lt;td&gt;10^3&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Examples of numbers with prefixes:&lt;/p&gt;&lt;p&gt;&lt;code&gt;100K&lt;/code&gt;, &lt;code&gt;20M&lt;/code&gt;, &lt;code&gt;3G&lt;/code&gt;&lt;/p&gt;&lt;p&gt;They are equivalent to &lt;code&gt;100_000&lt;/code&gt;, &lt;code&gt;20_000_000&lt;/code&gt;, and &lt;code&gt;3_000_000_000&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;When the above prefixes are added to the end of a number, its data types is inferred to be &lt;code&gt;int&lt;/code&gt;. You can add the specific data type name (limited to &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;uint&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;ulong&lt;/code&gt;) to the end of these prefixes to explicitly specify its data type, such as &lt;code&gt;100K@uint&lt;/code&gt;, &lt;code&gt;20M@long&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;It should be noted that since the multiple of the prefixes &amp;ldquo;E&amp;rdquo;, &amp;ldquo;P&amp;rdquo;, and &amp;ldquo;T&amp;rdquo; exceed the range of the &lt;code&gt;int&lt;/code&gt; type, when using these three prefixes, you must explicitly specify the &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;ulong&lt;/code&gt; data type, otherwise an &amp;ldquo;out of range&amp;rdquo; error will be thrown. For example, the number &lt;code&gt;12T&lt;/code&gt; is an invalid number, you need to write it as &lt;code&gt;12T@long&lt;/code&gt; or &lt;code&gt;12T@ulong&lt;/code&gt;.&lt;/p&gt;&lt;h5 id=&#34;binary-prefixes&#34;&gt;Binary Prefixes&lt;/h5&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; also supports the following binary prefixes:&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Prefix&lt;/th&gt;&lt;th&gt;2^n&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;EB&lt;/td&gt;&lt;td&gt;2^60&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PB&lt;/td&gt;&lt;td&gt;2^50&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;TB&lt;/td&gt;&lt;td&gt;2^40&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;GB&lt;/td&gt;&lt;td&gt;2^30&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MB&lt;/td&gt;&lt;td&gt;2^20&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;KB&lt;/td&gt;&lt;td&gt;2^10&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The letter &amp;ldquo;B&amp;rdquo; can also be written as the lowercase letter &amp;ldquo;i&amp;rdquo;, for example &amp;ldquo;KB&amp;rdquo; and &amp;ldquo;Ki&amp;rdquo; are the same, and &amp;ldquo;TB&amp;rdquo; and &amp;ldquo;Ti&amp;rdquo; are also the same.&lt;/p&gt;&lt;p&gt;Examples of numbers with binary prefixes:&lt;/p&gt;&lt;p&gt;&lt;code&gt;100KB&lt;/code&gt;, &lt;code&gt;20MB&lt;/code&gt;, &lt;code&gt;3GB&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Their values are equal to &lt;code&gt;100 x 1024&lt;/code&gt;, &lt;code&gt;20 x 1024 x 1024&lt;/code&gt;, and &lt;code&gt;3 x 1024 x 1024 x 1024&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Hexadecimal and binary integers cannot have prefixes added, for example &lt;code&gt;0x24K&lt;/code&gt; and &lt;code&gt;0b1010M&lt;/code&gt; are both invalid numbers.&lt;/p&gt;&lt;/blockquote&gt;&lt;h5 id=&#34;decimal-prefixes&#34;&gt;Decimal Prefixes&lt;/h5&gt;&lt;p&gt;For decimals, &lt;em&gt;ASON&lt;/em&gt; supports the following prefixes:&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Prefix&lt;/th&gt;&lt;th&gt;10^n&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;m&lt;/td&gt;&lt;td&gt;10^-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;u&lt;/td&gt;&lt;td&gt;10^-6&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n&lt;/td&gt;&lt;td&gt;10^-9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;p&lt;/td&gt;&lt;td&gt;10^-12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;f&lt;/td&gt;&lt;td&gt;10^-15&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a&lt;/td&gt;&lt;td&gt;10^-18&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Examples of numbers with decimal prefixes:&lt;/p&gt;&lt;p&gt;&lt;code&gt;100m&lt;/code&gt;, &lt;code&gt;20u&lt;/code&gt;, &lt;code&gt;3n&lt;/code&gt;&lt;/p&gt;&lt;p&gt;They are equivalent to &lt;code&gt;100e-3&lt;/code&gt;, &lt;code&gt;20e-6&lt;/code&gt;, &lt;code&gt;3e-9&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;When the above prefixes are added to the end of a number, its data type will be inferred to be &lt;code&gt;float&lt;/code&gt;. You can add the data type name (limited to &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;) to the end of these prefixes to explicitly specify its data type, such as  &lt;code&gt;100m@double&lt;/code&gt;, &lt;code&gt;20n@double&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Hexadecimal floating-point numbers cannot have prefixes added, for example &lt;code&gt;0x2.9p8m&lt;/code&gt; is an invalid number.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&#34;boolean&#34;&gt;Boolean&lt;/h3&gt;&lt;p&gt;Boolean values can only be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;&lt;h3 id=&#34;characters&#34;&gt;Characters&lt;/h3&gt;&lt;p&gt;A character value consists of a pair of single quote and a character, such as &lt;code&gt;&#39;a&#39;&lt;/code&gt;, &lt;code&gt;&#39;文&#39;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For some special characters, &lt;em&gt;ASON&lt;/em&gt; uses a backslash &lt;code&gt;\&lt;/code&gt; and an character to represent them. &lt;em&gt;ASON&lt;/em&gt; supports the following escape characters:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&#39;\t&#39;&lt;/code&gt;: Horizontal tabulation&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;\r&#39;&lt;/code&gt;: Carriage return (CR)&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;\n&#39;&lt;/code&gt;: New line character (also called line feed, or LF)&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;\0&#39;&lt;/code&gt;: Null character&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;\&amp;quot;&#39;&lt;/code&gt;: Doube quote&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;\&#39;&#39;&lt;/code&gt;: Single quote&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;\\&#39;&lt;/code&gt;: Backslash itself&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; does not support the following escape characters:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&#39;\v&#39;&lt;/code&gt;: Vertical tabulation&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;\f&#39;&lt;/code&gt;: Page breaking control character&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&#34;unicode-escape-characters&#34;&gt;Unicode Escape Characters&lt;/h4&gt;&lt;p&gt;Characters can also be represented in the format &lt;code&gt;&#39;\u{...}&#39;&lt;/code&gt;, where &amp;ldquo;&amp;hellip;&amp;rdquo; is the code point of the Unicode character. For example, the hyphen &lt;code&gt;&#39;-&#39;&lt;/code&gt; can be written as &lt;code&gt;&#39;\u{2d}&#39;&lt;/code&gt;, and the character &lt;code&gt;&#39;文&#39;&lt;/code&gt; can be written as &lt;code&gt;&#39;\u{6587}&#39;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;It is worth mentioning that JavaScript supports the format &lt;code&gt;\uFFFF&lt;/code&gt; to represent Unicode characters and &lt;code&gt;\xFF&lt;/code&gt; to represent ASCII characters. These two formats are not supported by &lt;em&gt;ASON&lt;/em&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Note that some emojis may be composed of multiple Unicode characters, although they appear to be a single character when displayed. For example, the emoji 🤦‍♂️ is actually composed of 4 characters U+1F926, U+200D, U+2642, U+FE0F. If this emoji is enclosed in single quotes, it will be an invalid character. You can &lt;a href=&#34;https://unicode.org/emoji/charts/full-emoji-list.html&#34;&gt;look up here&lt;/a&gt; for the code points corresponding to specific emojis.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&#34;strings&#34;&gt;Strings&lt;/h3&gt;&lt;p&gt;A string consists of a pair of double quotes and a series of characters, such as &lt;code&gt;&amp;quot;abc&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;文字&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;😊🍍&amp;quot;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Any valid character can be used to form a string, including the escaped characters, such as &lt;code&gt;&amp;quot;foo\nbar&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;\u{2d}\u{6587}\0&amp;quot;&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&#34;long-strings&#34;&gt;Long Strings&lt;/h4&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; supports writing long strings on multiple lines. Just add a backslash &lt;code&gt;\&lt;/code&gt; and a newline character at the end of the line, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, \&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    World!&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The string above is equivalent to &lt;code&gt;&amp;quot;Hello, World!&amp;quot;&lt;/code&gt;. Note that the leading whitespace on each line is automatically trimmed.&lt;/p&gt;&lt;h4 id=&#34;multiline-strings&#34;&gt;Multiline Strings&lt;/h4&gt;&lt;p&gt;If a string consists of multiple paragraphs (lines), you can simply write them down as they are, and the newlines in the string will be preserved, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    World! I am&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    ASON.&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The string above is equivalent to:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello,\n    World! I am\n    ASON.&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that in this case, the leading whitespace before each line will not be trimmed, which means that all normal characters, newlines, and whitespace between the two double quotes will be preserved.&lt;/p&gt;&lt;h4 id=&#34;raw-strings&#34;&gt;Raw Strings&lt;/h4&gt;&lt;p&gt;Sometimes the backslash &lt;code&gt;\&lt;/code&gt; is exactly the character we need, for example when writing regular expressions. If we write all the backslashes as &lt;code&gt;\\&lt;/code&gt;, it will be not only confusing but also error-prone. &lt;em&gt;ASON&lt;/em&gt; supports &amp;ldquo;raw strings&amp;rdquo;, the format is &lt;code&gt;r&amp;quot;...&amp;quot;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;In raw strings, the backslash character no longer has the escape function, and all escape characters will be disabled. In other words, all characters in the string will be preserved as is (expect for the double quotes which will terminate the string). For example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;^\d*(\.\d+)?$&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The string above is equivalent to &lt;code&gt;&amp;quot;^\\d*(\\.\\d+)?$&amp;quot;&lt;/code&gt;. It can be seen that in some special cases, using raw strings is much clearer than ordinary strings.&lt;/p&gt;&lt;p&gt;In addition to the backslash character, what if the double quote &lt;code&gt;&amp;quot;&lt;/code&gt; is also the character we need? In this case, you can use the variant of the raw string, the format is &lt;code&gt;r#&amp;quot;...&amp;quot;#&lt;/code&gt;. In this kind of string, unless you encounter the ending mark &lt;code&gt;&amp;quot;#&lt;/code&gt;, all characters will be preserved as is, including double quotes. For example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;r#&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;a href=&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;https:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//hemashushu.github.io/&amp;#34; title=&amp;#34;Home&amp;#34;&amp;gt;Home Page&amp;lt;/a&amp;gt;&amp;#34;#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The string above is equivalent to:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;a href=\&amp;#34;https://hemashushu.github.io/\&amp;#34; title=\&amp;#34;Home\&amp;#34;&amp;gt;Home Page&amp;lt;/a&amp;gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;trimmed-strings&#34;&gt;Trimmed Strings&lt;/h4&gt;&lt;p&gt;When we write long text of multiple paragraphs, due to the indentation of the code, the text may be introduced with a lot of leading spaces. In general, we can only ensure the correctness of the text content by manually deleting the leading spaces of each line, but this will destroy the overall indentation. In order to solve this problem, &lt;em&gt;ASON&lt;/em&gt; introduces the special format of &amp;ldquo;trimmed string&amp;rdquo;.&lt;/p&gt;&lt;p&gt;This type of string starts with the mark &lt;code&gt;r|&amp;quot;&lt;/code&gt; and then the body starts on a new line and ends with the mark &lt;code&gt;|&amp;quot;&lt;/code&gt; on a new line.&lt;/p&gt;&lt;p&gt;The leading space characters of each line in the body will be automatically trimmed according to the number of leading space characters in the first line. For example, if the number of leading space characters in the first line is 8, then each line of the body will be trimmed by up to 8 leading space characters.&lt;/p&gt;&lt;p&gt;Here is an example of a trimmed string:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;dependencies:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;err&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;r|&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                A sample module&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                Features:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                    1. Simple&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                    2. Efficient&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                Authored by Bar and licensed under the LGPL.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                &amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the value of the field &amp;ldquo;description&amp;rdquo; is a trimmed string. Because the number of leading space characters in its first line is 16, each line of the body will be trimmed by up to 16 leading space characters, so its value is equivalent to:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;A sample module&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;Features:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    1. Simple&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    2. Efficient&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;Authored by Bar and licensed under the LGPL.&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When using trimmed strings, note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The start tag &lt;code&gt;r|&amp;quot;&lt;/code&gt; must be followed immediately by a newline character.&lt;/li&gt;&lt;li&gt;The end tag &lt;code&gt;|&amp;quot;&lt;/code&gt; must start on a new line.&lt;/li&gt;&lt;li&gt;The newline character after the start tag and the newline character at the end of the body do not belong to the body, they are part of the start tag and end tag. Therefore, in the above example, there are no newline characters at the beginning and end of the body.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;dates&#34;&gt;Dates&lt;/h3&gt;&lt;p&gt;&lt;em&gt;ASON&lt;/em&gt; supports the date type, which is formatted as: &lt;code&gt;d&amp;quot;YYYY-MM-DD HH:mm:ss&amp;quot;&lt;/code&gt;. The format of the date is similar to a regular string, but note that there is a letter &amp;ldquo;d&amp;rdquo; before the first double quote.&lt;/p&gt;&lt;p&gt;Here are some examples of dates:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2023-03-24 10:15:00&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2035-06-23 13:50:30&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As with the &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc3339&#34;&gt;RFC 3339&lt;/a&gt; standard, you can add the letter &amp;rsquo;t&amp;rsquo; or &amp;lsquo;T&amp;rsquo; between the date and time, for example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2023-03-24t10:15:00&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2035-06-23T13:50:30&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can also add the &lt;a href=&#34;https://en.wikipedia.org/wiki/Coordinated_Universal_Time&#34;&gt;Corrdinated Universal Time (UTC)&lt;/a&gt; time zone at the end, for example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2023-03-24 10:15:00+08:00&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2035-06-23 13:50:30-01:00&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can also use the letter &amp;lsquo;z&amp;rsquo; or &amp;lsquo;Z&amp;rsquo; to represent the &lt;code&gt;+00:00&lt;/code&gt; time zone, for example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2023-03-24 10:15:00z&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;d&amp;quot;2035-06-23 13:50:30Z&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that the time portion cannot be omitted. If you do not need the time portion in some cases, you can use &lt;code&gt;00:00:00&lt;/code&gt; to fill it in. For example, &lt;code&gt;d&amp;quot;2023-04-09T00:00:00&amp;quot;&lt;/code&gt;.&lt;/p&gt;&lt;h3 id=&#34;byte-data&#34;&gt;Byte Data&lt;/h3&gt;&lt;p&gt;Byte data is a segment of binary data in memory or storage media. &lt;em&gt;ASON&lt;/em&gt; supports representing byte data in the format &lt;code&gt;h&amp;quot;...&amp;quot;&lt;/code&gt;. Where &amp;ldquo;&amp;hellip;&amp;rdquo; is a series of two-digit hexadecimal byte values, for example:&lt;/p&gt;&lt;p&gt;&lt;code&gt;h&amp;quot;0011aabb&amp;quot;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;It should be noted that each byte value must be two digits, and if it is less than two digits, it must be padded with the number 0.&lt;/p&gt;&lt;p&gt;The letters &amp;lsquo;a&amp;rsquo; to &amp;lsquo;f&amp;rsquo; are case-insensitive, so the above byte data can also be written as:&lt;/p&gt;&lt;p&gt;&lt;code&gt;h&amp;quot;0011AABB&amp;quot;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;To more clearly represent the value of each byte, any number of spaces, hyphens, colons, tabs, carriage returns, and line feeds can be inserted between the digits, i.e. &lt;code&gt;[ -:\t\r\n]&lt;/code&gt;. Therefore, the above byte data can also be written as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;h&amp;quot;00 11 aa bb&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;h&amp;quot;00-11-aa-bb&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;h&amp;quot;00:11:aa:bb&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;When the data is very long, it can also be written on multiple lines, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;48 65 6C 6C    6F 2C 20 57&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  6F 72 6C 64    21 20 49 20&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  61 6D 20 41    53 4F 4E 2E&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;arrays&#34;&gt;Arrays&lt;/h3&gt;&lt;p&gt;An array is a collection of &lt;em&gt;ASON&lt;/em&gt; values of the same type, for example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;[1,2,3]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;[&amp;quot;foo&amp;quot;, &amp;quot;bar&amp;quot;]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;[true, false, true]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ASON arrays require all of their elements to be of the same data type, for example &lt;code&gt;[1, &amp;quot;foo&amp;quot;, false]&lt;/code&gt; is an invalid array.&lt;/p&gt;&lt;p&gt;Array elements can be written on the same line, separated by commas. They can also be written on separate lines, with one element per line, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;baz&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;trailing-commas&#34;&gt;Trailing Commas&lt;/h4&gt;&lt;p&gt;Unlike JSON, in &lt;em&gt;ASON&lt;/em&gt; documents, when writing elements on separate lines, the trailing comma can be omitted. &lt;em&gt;ASON&lt;/em&gt; recommends omitting trailing commas actually. Of course, it is also valid to add a trailing comma, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;baz&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another difference from &lt;em&gt;JSON&lt;/em&gt; is that a trailing comma can be added to the last element of an &lt;em&gt;ASON&lt;/em&gt; array, for example, in the above example a comma is added after &amp;ldquo;baz&amp;rdquo;. A trailing comma can even be added to the last element on the same line, for example &lt;code&gt;[1,2,3,]&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The trailing comma rule also applies to &lt;em&gt;Tuples&lt;/em&gt; and &lt;em&gt;Objects&lt;/em&gt;, which will be discussed in the following sections.&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 id=&#34;array-types&#34;&gt;Array Types&lt;/h4&gt;&lt;p&gt;Array elements can be of simple or complex types, such as tuples, objects, and even arrayss, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;39&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;41&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the number of elements in an array is not part of the &amp;ldquo;type&amp;rdquo;, in other words, an &lt;code&gt;int&lt;/code&gt; array with 3 elements has the same type as an &lt;code&gt;int&lt;/code&gt; array with 2 elements. In the above example, we can see that there are three sub-arrays with different numbers of elements, but since their element data types are all &lt;code&gt;int&lt;/code&gt;, the types of these three sub-arrays are the same, so they can be grouped as a big array.&lt;/p&gt;&lt;h3 id=&#34;tuples&#34;&gt;Tuples&lt;/h3&gt;&lt;p&gt;Similar to arrays, tuples are also collections of &lt;em&gt;ASON&lt;/em&gt; values, but tuples do not require the data types of their elements to be the same. For example:&lt;/p&gt;&lt;p&gt;&lt;code&gt;(1, &amp;quot;foo&amp;quot;, true)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;In addition, tuples use a pair of parentheses &lt;code&gt;(...)&lt;/code&gt; to enclose the elements, while arrays use a pair of square brackets &lt;code&gt;[...]&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;In terms of function, &lt;em&gt;ASON&lt;/em&gt; tuples are similar to &lt;em&gt;JSON&lt;/em&gt; lists.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&#34;objects&#34;&gt;Objects&lt;/h3&gt;&lt;p&gt;An object is a collection of one or more &amp;ldquo;name-value&amp;rdquo; pairs. For example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;regex&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.10.4&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;247&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The name is composed of the characters &lt;code&gt;[0-9a-zA-Z_]&lt;/code&gt;, &lt;code&gt;\u{a0}...\u{d7ff}&lt;/code&gt;, and &lt;code&gt;\u{e000}...\u{10ffff}&lt;/code&gt;, and the name does not need to be enclosed in double quotes. The value can be any &lt;em&gt;ASON&lt;/em&gt; value.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&amp;ldquo;Name-value&amp;rdquo; pairs are sometimes also called &amp;ldquo;fields&amp;rdquo;.&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 id=&#34;nesting&#34;&gt;Nesting&lt;/h4&gt;&lt;p&gt;The value of a &amp;ldquo;name-value&amp;rdquo; pair can be any &lt;em&gt;ASON&lt;/em&gt; value, including values such as arrays, tuples, and objects. Therefore, nesting of objects is very common, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;ason&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.1.7&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;chrono&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^0.4.35&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;hexfloat2&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^0.1.3&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;parser&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;serde&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;variants&#34;&gt;Variants&lt;/h3&gt;&lt;p&gt;A variant is a special data type that wraps different types of data, similar to the &lt;code&gt;enum&lt;/code&gt; in the Rust language.&lt;/p&gt;&lt;p&gt;The format of a variant is &lt;code&gt;name::category(value)&lt;/code&gt;, where:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;name&lt;/code&gt; is a string composed of characters &lt;code&gt;[0-9a-zA-Z_]&lt;/code&gt;, it is the name of the variant. &lt;em&gt;ASON&lt;/em&gt; will consider it the same data type as long as the name of the variant is the same.&lt;/li&gt;&lt;li&gt;&lt;code&gt;category&lt;/code&gt; is also composed characters &lt;code&gt;[0-9a-zA-Z_]&lt;/code&gt;, it represents the different categories under the variant.&lt;/li&gt;&lt;li&gt;&lt;code&gt;(value)&lt;/code&gt; is an arbitrary &lt;em&gt;ASON&lt;/em&gt; value enclosed in parentheses, which can be ommited.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Here are some examples of the variant &lt;code&gt;Shape&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Shape::Circle(2)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Shape::Square(4)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Shape::Rectangle((6,8))&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that the &lt;code&gt;((6,8))&lt;/code&gt; above is not a typo, because &lt;code&gt;(6,8)&lt;/code&gt; is a tuple, and the outer parentheses are the inherent format of the &lt;code&gt;Variant&lt;/code&gt;. It means the same as &lt;code&gt;Shape::Rectangle({width: 6, height: 8})&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Not all members of a variant must have &lt;code&gt;(value)&lt;/code&gt;, for example the following variant &lt;code&gt;Color&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Color::Red&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Color::Blue&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Color::RGB((128,0,250))&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Of which &lt;code&gt;Red&lt;/code&gt; and &lt;code&gt;Blue&lt;/code&gt; have no extra values, because they themselves are a category of the variant &lt;code&gt;Color&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&#34;using-variants-to-replace-null&#34;&gt;Using Variants to Replace &lt;code&gt;null&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;In programming, &lt;code&gt;null&lt;/code&gt; is a convenient but annoying value, it can lead to potential errors and a lot of defensive judgment statements. &lt;em&gt;ASON&lt;/em&gt; does not support &lt;code&gt;null&lt;/code&gt;, instead of which is the variant &lt;code&gt;Option&lt;/code&gt;. For example, if you need to express an integer that may not exist, you can write it like this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Option::None&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Option::Some(123)&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&#34;default-value-of-object-fields&#34;&gt;Default Value of Object Fields&lt;/h4&gt;&lt;p&gt;When writing an &lt;em&gt;ASON&lt;/em&gt; document, if the value of a field of an object is the variant &lt;code&gt;Option::None&lt;/code&gt;, the field can be omitted. For example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;ason&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Can be written as:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;ason&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;comments&#34;&gt;Comments&lt;/h2&gt;&lt;p&gt;ASON supports 3 formats of comments: line comments, block comments, and documentation comments.&lt;/p&gt;&lt;p&gt;Comments in &lt;em&gt;ASON&lt;/em&gt; documents are for human consumption only, and they are completely ignored by &lt;em&gt;ASON&lt;/em&gt; parsers.&lt;/p&gt;&lt;h3 id=&#34;line-comments&#34;&gt;Line Comments&lt;/h3&gt;&lt;p&gt;Line comments start with the &lt;code&gt;//&lt;/code&gt; marker and continue to the end of the line, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// this is a line comment&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// this is a line comment also&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;block-comments&#34;&gt;Block Comments&lt;/h3&gt;&lt;p&gt;Block comments start with the &lt;code&gt;/*&lt;/code&gt; marker and end with the &lt;code&gt;*/&lt;/code&gt; marker, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;block&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;comment&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;err&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;block&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;comment&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;also&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;block&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;comment&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;everywhere&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;ason&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Block comments support nesting, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;err&#34;&gt;level&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;one&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;level&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;two&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;level&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;one&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;again&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In nested block comments, the start and end markers must appear in pairs.&lt;/p&gt;&lt;h3 id=&#34;documentation-comments&#34;&gt;Documentation Comments&lt;/h3&gt;&lt;p&gt;Documentation comments are used to write long texts. A documentation comment starts with a &lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt; marker on a line by itself and ends with a &lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt; marker on a line by itself, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    This is a document comment.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    It can be very long.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    You can even write Markdown formatted text here.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Until there are three consecutive double quotes on a single line.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note that although the start and end markers must be on a line by themselves, leading whitespace on the markers is allowed.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&#34;mixed-comments&#34;&gt;Mixed Comments&lt;/h3&gt;&lt;p&gt;Line comments, block comments, and documentation comments can be mixed, but note that &lt;strong&gt;other comment markers&lt;/strong&gt; within a comment will be treated as plain text and will not be parsed as another comment, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// this is a line comment, /* this is still a line comment. */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;block&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;comment,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// this is still a block comment. */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;id:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    this is a document comment,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    // this is still a document comment.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    /* this is still a document comment. */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In all 3 examples above, there is only one comment.&lt;/p&gt;</description>
     </item>
   
 </channel>
</rss>
