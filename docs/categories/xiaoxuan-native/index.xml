
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>xiaoxuan-native on Hemashushu&#39;s Homepage</title>
   <link>https://hemashushu.github.io/categories/xiaoxuan-native/</link>
   <description>Recent content in xiaoxuan-native on Hemashushu&#39;s Homepage</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en</language>
   <copyright>Copyright &amp;copy; 2023 - Hippospark Young</copyright>
   <lastBuildDate>Fri, 19 Jan 2024 00:00:00 +0000</lastBuildDate>
   
       <atom:link href="https://hemashushu.github.io/categories/xiaoxuan-native/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>XiaoXuan Logic</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-logic/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-logic/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoXuan Managed</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-managed/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-managed/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoXuan Micro</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-micro/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-micro/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoXuan Native</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-native/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-native/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoXuan Script</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-script/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-script/</guid>
       <description>&lt;figure class=&#34;wide&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Script Programming Language&lt;/em&gt; is suitable for building high-performance, solid web applications. It can be compiled to WebAssembly on-the-fly without the need for any build tools. It is intended to be the next preferred programming language for web development.&lt;/p&gt;&lt;h2 id=&#34;how-does-it-work&#34;&gt;How does it work?&lt;/h2&gt;&lt;p&gt;Only 3 files are needed to give browsers the ability to develop web applications using a new language (the XiaoXuan Script):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;ans_compiler.wasm&lt;/code&gt;, the compiler for XiaoXuan Script.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ans_loader.js&lt;/code&gt;, the loader for the compiler, which also serves as the web application manager, as well as the bridge between the WebAssembly and the Web API.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ans_std.ans&lt;/code&gt;, the source code of the XiaoXuan Script standard library.&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&#34;mid white&#34;&gt;&lt;img src=&#34;./images/compilation.webp&#34;         alt=&#34;The Compilation Process&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The Compilation Process&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;When a user accesses your web application (web page), the &lt;em&gt;compiler&lt;/em&gt; will compile all the source code (including the user code, standard library, and all dependencies) on-the-fly into a WebAssembly file, which is then cached in the user&amp;rsquo;s browser to speed up the next load. The web page and WebAssembly will then interoperate via the &lt;em&gt;bridge&lt;/em&gt;.&lt;/p&gt;&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;&lt;p&gt;Let&amp;rsquo;s create a minimal &amp;ldquo;Hello World!&amp;rdquo; XiaoXuan Script application.&lt;/p&gt;&lt;p&gt;First create a folder named &amp;ldquo;hello-ans&amp;rdquo; in your home directory (or any directory), then download the XiaoXuan Script distribution package &lt;span class=&#34;null-link&#34;&gt;xiaoxuan_script_dist_1.0.1.tar.gz&lt;/span&gt;, which is a compressed file containing &lt;code&gt;ans_compiler.wasm&lt;/code&gt;, &lt;code&gt;ans_loader.js&lt;/code&gt;, &lt;code&gt;ans_std.ans&lt;/code&gt;, and some README etc. files, and then extract it to this folder.&lt;/p&gt;&lt;p&gt;Then create files &lt;em&gt;main.ans&lt;/em&gt; and &lt;em&gt;ans_package.json&lt;/em&gt; in this folder.&lt;/p&gt;&lt;p&gt;The file &lt;em&gt;main.ans&lt;/em&gt; is the main module of our web application, which should contain the &lt;code&gt;main&lt;/code&gt; function. The file content is as follows:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;btn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#like&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;btn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may have noticed that the above code looks similar to the JavaScript, this is the design of XiaoXuan Script, where the names of objects and functions are kept as close as possible to JavaScript, the similarity to an existing language reduces the difficulty of learning a new language.&lt;/p&gt;&lt;p&gt;The file &lt;em&gt;ans_package.json&lt;/em&gt; is the package description file, which contains information about the package name, version, compiler version, list of source files, and dependencies. &lt;em&gt;ans_package.json&lt;/em&gt; has the following contents:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello_ans&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;compiler&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;modules&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./main.ans&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, create the web page file &lt;em&gt;index.html&lt;/em&gt;, the content is as follows:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Hello, XiaoXuan Script&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;./ans_loader.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;title&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;like&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;+1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The content of &lt;em&gt;index.html&lt;/em&gt; is quite simple, the key line is: &lt;code&gt;&amp;lt;script type=&amp;quot;module&amp;quot; src=&amp;quot;./ans_loader.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;, it loads the &lt;em&gt;XiaoXuan Script Loader&lt;/em&gt; and the loader does all the rest.&lt;/p&gt;&lt;p&gt;The structure of the folder &amp;ldquo;hello-ans&amp;rdquo; should look like this:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hello_ans&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_compiler.wasm&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_loader.js&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_module.json&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ans_std.ans&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── index.html&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── main.ans&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, let&amp;rsquo;s create a local HTTP server, which can be done by running the command &lt;code&gt;python -m http.server&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Now open any browser and visit &lt;code&gt;http://localhost:8000/&lt;/code&gt;. You should see the text &amp;ldquo;Hello World!&amp;rdquo; and the number will increase when you click on the &amp;ldquo;Like&amp;rdquo; button.&lt;/p&gt;&lt;h2 id=&#34;q--a&#34;&gt;Q &amp;amp; A&lt;/h2&gt;&lt;h3 id=&#34;what-are-the-differences-between-_javascript_-and-_xiaoxuan-script_&#34;&gt;What are the differences between &lt;em&gt;JavaScript&lt;/em&gt; and &lt;em&gt;XiaoXuan Script&lt;/em&gt;?&lt;/h3&gt;&lt;p&gt;&lt;em&gt;JavaScript&lt;/em&gt; is the default programming language supported by browsers. It is easy to learn and use, and its syntax is flexible. Compared to &lt;em&gt;JavaScript&lt;/em&gt;, &lt;em&gt;XiaoXuan Script&lt;/em&gt; has the following advantages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;It has a stricter syntax and is a statically, strongly typed compiled programming language, it is more suitable for developing large-scale applications. It can significantly reduce coordination costs between team members in team development, and is also easier to maintain the application source code.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;It is compiled to WebAssembly before running, and WebAssembly is widely considered to have higher performance than &lt;em&gt;JavaScript&lt;/em&gt;. Therefore, &lt;em&gt;XiaoXuan Script&lt;/em&gt; has better performance in computationally intensive scenarios (such as data processing, audio or image processing).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;what-are-the-differences-between-_typescript_-and-_xiaoxuan-script_&#34;&gt;What are the differences between &lt;em&gt;TypeScript&lt;/em&gt; and &lt;em&gt;XiaoXuan Script&lt;/em&gt;?&lt;/h3&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Script&lt;/em&gt; has some syntactic similarities to TypeScript. If you are familiar with TypeScript, it means that you can easily learn &lt;em&gt;XiaoXuan Script&lt;/em&gt;. The difference is that &lt;em&gt;TypeScript&lt;/em&gt; is compiled to &lt;em&gt;JavaScript&lt;/em&gt;, while &lt;em&gt;XiaoXuan Script&lt;/em&gt; is compiled to WebAssembly, which means that &lt;em&gt;XiaoXuan Script&lt;/em&gt; will have better performance.&lt;/p&gt;&lt;h3 id=&#34;rustcc-can-also-be-compiled-to-webassembly-so-what-are-the-differences-between-_xiaoxuan-script_-and-them&#34;&gt;Rust/C/C++ can also be compiled to WebAssembly, so what are the differences between &lt;em&gt;XiaoXuan Script&lt;/em&gt; and them?&lt;/h3&gt;&lt;p&gt;Rust/C/C++ are mainly used to build parts of a web application, such as data processing libraries, rather than building the entire web application. On the other hand, &lt;em&gt;XiaoXuan Script&lt;/em&gt; is used to build the entire application. Using &lt;em&gt;XiaoXuan Script&lt;/em&gt; means that you only need to learn one language to  develop a variety of applications, which reduces the learning burden on developers.&lt;/p&gt;&lt;h3 id=&#34;why-on-the-fly-compilation&#34;&gt;Why on-the-fly compilation?&lt;/h3&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Script&lt;/em&gt; actually supports pre-compilation mode, which is recommended for large-scale web applications that have a large amount of source code and dependencies.&lt;/p&gt;&lt;p&gt;However, for most web applications, the code may not so large, and on-the-fly compilation mode is more convenient. It can simplify the developer&amp;rsquo;s workflow, you can write, debug and run your code like you do with &lt;em&gt;JavaScript&lt;/em&gt;, without the need for any build tools. In addition, XiaoXuan Script has a very fast compilation speed, and users can hardly notice the compilation process when they access your web application.&lt;/p&gt;&lt;h2 id=&#34;get-started&#34;&gt;Get started&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Script Playground&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Script in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;manuals--tutorials&#34;&gt;Manuals &amp;amp; Tutorials&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Build a local TODO web application using XiaoXuan Script&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>XiaoYu Debugger</title>
       <link>https://hemashushu.github.io/works/xiaoyu-debugger/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-debugger/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoYu Dev Board</title>
       <link>https://hemashushu.github.io/works/xiaoyu-edu-board/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-edu-board/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoYu Dev Board Mini</title>
       <link>https://hemashushu.github.io/works/xiaoyu-devkit/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-devkit/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoYu Micro OS</title>
       <link>https://hemashushu.github.io/works/xiaoyu-micro-os/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-micro-os/</guid>
       <description></description>
     </item>
   
     <item>
       <title>XiaoYu OS</title>
       <link>https://hemashushu.github.io/works/xiaoyu-os/</link>
       <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoyu-os/</guid>
       <description>&lt;figure class=&#34;wide&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoYu OS&lt;/em&gt; is a brand new operating system built for the modern engineer&amp;rsquo;s dailyworkflow.Every application runs in secure, isolated environement with minimal privileges,requesting permissions only when needed. This also ensures a pristine system, even afteryears of use, free from accumulated clutter or hidden processes.XiaoYu OS empowers developers to directly maintain their applications, eliminating theneed for dedicated package maintainers.&lt;/p&gt;&lt;h2 id=&#34;what-makes-_xiaoyu-os_-unique&#34;&gt;What makes &lt;em&gt;XiaoYu OS&lt;/em&gt; unique?&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;严格的安全&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;除了 “系统初始化程序”、“图形 compositor” 以及 “消息总线” 等少数几个程序，其余的应用程序都运行于各自的容器（即：隔离的环境）当中。应用程序只有最小的权限，你可以运行任意应用程序而无需担心它会修改系统或者访问你的个人数据和文件。&lt;/p&gt;&lt;ol start=&#34;2&#34;&gt;&lt;li&gt;干净整洁&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;应用程序所产生的临时数据和文件均被限制在其所在的隔离环境中，当一个应用程序被删除时，不会留下任何垃圾在系统里。除此之外，应用程序甚至不需要安装，只需一个 URL 即可运行，运行完之后不留任何痕迹，实现“即用即弃”。&lt;/p&gt;&lt;ol start=&#34;3&#34;&gt;&lt;li&gt;高可用性&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;系统没有全局的动态共享库，每个应用程序自带其运行所需的共享库以及资源，因此即使系统进行了重大的更新或者修改，应用程序仍然能正常运行。&lt;/p&gt;&lt;p&gt;注：为减少冗余，那些非常通用的共享库被打包成一个叫做 “Core” 的组件，其组成以及共享库的版本是固定的，一个应用程序只能依赖一个指定版本的 “Core”。&lt;/p&gt;&lt;ol start=&#34;4&#34;&gt;&lt;li&gt;&lt;p&gt;全新的 UI&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;全新的交互方式&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;兼容 Linux 应用&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Core</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-core/</link>
       <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-core/</guid>
       <description>&lt;figure class=&#34;wide&#34;&gt;&lt;img src=&#34;./images/banner.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core Programming Language&lt;/em&gt; is used to build powerful user-space system programs with extremely fast startup speed and small footprint, it can directly call &lt;em&gt;syscall&lt;/em&gt; and interoperate with C shared libraries. Single-file, statically linked runtime make applications highly portable.&lt;/p&gt;&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;&lt;h3 id=&#34;availability-and-portability&#34;&gt;Availability and portability&lt;/h3&gt;&lt;p&gt;Traditional system programs, as well as command-line utilities, can be difficult for ordinary users to set up and run if they are not maintained by a distribution and have not been updated for a while, this is because:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;For applications built with compiled languages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;May encounter excessive dependencies that require manual compilation during the build process.&lt;/li&gt;&lt;li&gt;Compilation may fail due to changes in shared library version.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For applications built with script languages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;May encounter version incompatibility issues&lt;/li&gt;&lt;li&gt;May encounter dependency version conflict issues&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Core&lt;/em&gt; has learned from these lessons and is designed to ensure that once an application is created and can run, it will continue to run correctly even if it is not maintained and after a long period of time.&lt;/p&gt;&lt;h3 id=&#34;ease-of-development-maintaince-and-high-performance&#34;&gt;Ease of development, maintaince, and high performance&lt;/h3&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core&lt;/em&gt; language strikes a good balance between &amp;ldquo;ease of development&amp;rdquo; and &amp;ldquo;high performance&amp;rdquo;. The &lt;em&gt;XiaoXuan Core&lt;/em&gt; language has the following features:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Data-race-free concurrency model&lt;/li&gt;&lt;li&gt;GC-free automatic memory management&lt;/li&gt;&lt;li&gt;Discards difficult-to-master concepts such as pointers, ownership, borrow checking and lifetimes.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These features make it easy for developers to develop safe, stable and high-performance applications.&lt;/p&gt;&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;&lt;p&gt;The following code demostrates how to call syscalls and external functions (from shared libraries). The code prints the current working directory.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core&lt;/em&gt; standard library provides simpler ways to get the current working directory or print strings. The code below is written for demostration purposes only. Additionally, the following steps assume a Linux operation system. If you are using other platform or want to try a simpler &amp;ldquo;Hello, World!&amp;rdquo; program, please refer to the &lt;span class=&#34;null-link&#34;&gt;XiaoXuan Code Documentation&lt;/span&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;ol&gt;&lt;li&gt;Create a file named &lt;code&gt;pwd.anc&lt;/code&gt; in any directory with the following content:&lt;/li&gt;&lt;/ol&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;runtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;shared&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;libc.so.6&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;buf_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&amp;lt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;buf_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// invoke syscall&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getcwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;raw_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// call external function&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;raw_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&lt;li&gt;&lt;p&gt;Download the &lt;em&gt;XiaoXuan Core&lt;/em&gt; launcher &lt;span class=&#34;null-link&#34;&gt;ancl-1.0.1.x86_64-linux-gnu.tar.gz&lt;/span&gt; from the offical website and extract it to the &lt;code&gt;~/.local/bin&lt;/code&gt; or &lt;code&gt;/usr/bin&lt;/code&gt; directory.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Run the following command:&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;$ ancl pwd.anc&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The launcher will first check the version of the runtime required by the application and then start the corresponding runtime to execute it.&lt;/p&gt;&lt;p&gt;Since this is the first time we are running an &lt;em&gt;XiaoXuan Core&lt;/em&gt; application, the launcher will download the runtime from the internet. Then the runtime will compile and cache the application on-the-fly. Finally, you should see the application output a line of text, which is the current working directory.&lt;/p&gt;&lt;h2 id=&#34;the-xiaoxuan-core-vm&#34;&gt;The XiaoXuan Core VM&lt;/h2&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/vm-model.webp&#34;         alt=&#34;The XiaoXuan Core VM&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The XiaoXuan Core VM&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;XiaoXuan Runtime&lt;/em&gt; is a self-contained, statically linked executable that combines a compiler and a virtual machine (VM) designed specifically for running system programs. It offers serveral key advantages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Fast loading:&lt;/strong&gt; The structure of the application&amp;rsquo;s image file and the instruction set architecture (ISA) are specially designed to eliminate the need for parsing and preprocessing by the VM. Instead, the file is simply mapped to memory and the bytecode can be executed directly.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Program security:&lt;/strong&gt; The &lt;em&gt;XiaoXuan Core VM&lt;/em&gt; uses indexes instead of pointers to locate functions, data, and local variables. The stack is also divided into three separate stack: frame information, local variables, and operands. This effectively prevents memory boundary and overflow issues, reducing program vulnerabilities.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Seamless interoperability with C/C++/Rust shared libraries:&lt;/strong&gt; The VM&amp;rsquo;s memory model closely resembles that of the local native machine, allowing VM functions to directly call shared libraries built in C/C++/Rust. Additionally, VM functions can be also passed to shared libraries as callback functions (enabling shared libraries to call back into the VM). This feature allows &lt;em&gt;XiaoXuan Core&lt;/em&gt; to take full advantage of the rich ecosystem of existing shared libraries.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Data-race-free parallelism model:&lt;/strong&gt; The &lt;em&gt;XiaoXuan Core VM&lt;/em&gt; has no &amp;ldquo;global data&amp;rdquo;, and threads are only allowed to communicate by passing copies of data through &lt;em&gt;channels&lt;/em&gt;. This prevent data races and ensures thread safety.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Embeddable in Rust applications:&lt;/strong&gt; &lt;em&gt;XiaoXuan Core&lt;/em&gt; programs and the VM can be embedded as a library in Rust applications. Rust can then call VM functions just like regular functions (using a JIT generated &amp;ldquo;bridge function&amp;rdquo;).&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;how-xiaoxuan-core-solves-verison-compatibility-issues&#34;&gt;How XiaoXuan Core solves verison compatibility issues?&lt;/h2&gt;&lt;p&gt;&lt;em&gt;XiaoXiao Core&lt;/em&gt; applications can maintain correct operation even when the runtime environment changes (e.g., major version changes to the shared libraries in the system). This is achieved through the following two measures:&lt;/p&gt;&lt;figure class=&#34;wide white&#34;&gt;&lt;img src=&#34;./images/version-model.webp&#34;         alt=&#34;The XiaoXuan Core Applications Version Control&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The XiaoXuan Core Applications Version Control&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;ol&gt;&lt;li&gt;Runtime version specification&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Each &lt;em&gt;XiaoXuan Core&lt;/em&gt; application is required to specify a runtime version number. For single-file applications, this is specified using the &lt;code&gt;config(runtime, &amp;quot;1.0&amp;quot;)&lt;/code&gt; statement. For multi-file applications, it is specified in the package descriptor file &lt;code&gt;package.anon&lt;/code&gt;, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;myapp&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;runtime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.1&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;XiaoXuan Core Application Launcher&lt;/em&gt; (&lt;code&gt;ancl&lt;/code&gt;) will start the corresponding runtime based on the version number specified by the application to compile or run.&lt;/p&gt;&lt;ol start=&#34;2&#34;&gt;&lt;li&gt;Bundled shared modules and shared libraries&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Each verson of the runtime comes with its own shared modules (e.g., &lt;code&gt;std&lt;/code&gt; and &lt;code&gt;math&lt;/code&gt;) and, most importantly, a set of dynamic shared libraries (e.g., &lt;code&gt;libc&lt;/code&gt;, &lt;code&gt;libsqlite3&lt;/code&gt;, &lt;code&gt;libz&lt;/code&gt; etc.). This allows applications to not rely on the shared libraries of the OS.&lt;/p&gt;&lt;p&gt;Therefore, whether the &lt;em&gt;XiaoXuan Core&lt;/em&gt; runtime is updated or the system shared library versions change, the application can run in the same environment as it was developed in.&lt;/p&gt;&lt;p&gt;This feature improves application compatibility and stability, reduces dependency on the system environment, simplifies application deployment and maintenance.&lt;/p&gt;&lt;h2 id=&#34;get-started&#34;&gt;Get started&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Core in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;manuals--tutorials&#34;&gt;Manuals &amp;amp; Tutorials&lt;/h2&gt;&lt;ul class=&#34;card&#34;&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c1&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;The XiaoXuan Programming Language Reference&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Lang&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-04-16&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data types and Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Variables&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Functions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Collection&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Method, Generic and Trait&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Pattern&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Chain&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Error Handling&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Package and Modules&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Macro&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c2&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;The XiaoXuan Core Assembly&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Lang&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-09-10&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Module Nodes&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Instructions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Function Call&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;System Call&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Environment Call&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Packages and Modules&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c3&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;The XiaoXuan Core Intermediate Representation (IR)&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Lang&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-10-12&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data Types and Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Functions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Struct and Array&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Packages and Modules&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c4&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;Designing a Runtime Virtual Machine (VM) for Systems Programming&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Core&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-06-13&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data types and thoughts on floating-pointer numbers&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The triadic stack&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Using indexes instead of pointer&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The instruction set&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Using structured blocks instead of jumps for control flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Tail call optimization&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Environment calls&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;System calls&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Bridge functions and external calls&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;A Data-race-free parallel Model&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c5&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;Build a Simple OS (based on Linux kernel) from Scratch using XiaoXuan Core&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Core&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-09&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Set up a RISC-V virtual machine using QEMU&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `init` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `shell` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Fundamentals of file system and processes, implementing the `pwd` and `ls` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Implement the `mount` and `umount` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principals of `redirect`, implementing the `echo` and `cat` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principal of `pipe`, implementing the `tee` and `tr` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Session and process groups&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The `root` privileges, users and groups, and the `setuid` bit&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Add support for shell scripts&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c6&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;Build a Docker-like Container Utility from Scratch using XiaoXuan Core&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Core&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-15&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The principal of Linux container&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the file system&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the process space&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the accounts&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The virtual networking devices and route&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;related-documents&#34;&gt;Related documents&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;An introduction to the XiaoXuan Core application image file format&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Object Notation (ANON): a Human-readable object notation format&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Allocator: a low-latency, scalable memory allocator&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;related-projects&#34;&gt;Related projects&lt;/h2&gt;&lt;p&gt;The source code repositories of related projects:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core VM&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Assembly&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core IR&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Compiler&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Runtime&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Launcher&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Standard Library&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Allocator&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Object Notation (ANON)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>XiaoXuan Core - Chinese Edition (中文版)</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-local-hans/</link>
       <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-local-hans/</guid>
       <description></description>
     </item>
   
     <item>
       <title>The XiaoXuan Programming Language</title>
       <link>https://hemashushu.github.io/works/xiaoxuan-lang/</link>
       <pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate>
       
       <guid>https://hemashushu.github.io/works/xiaoxuan-lang/</guid>
       <description>&lt;figure class=&#34;wide&#34;&gt;&lt;img src=&#34;./images/banner_v2.webp&#34;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;The XiaoXuan Language&lt;/em&gt; is a full-stack programming language. It consists of several variants and can be used to develop a variety applications, including digital circuits and chips, microcontroller programs, GPU shaders, system programs, local native programs, cloud native programs, web applications and more. All variants use the same syntax and design philosophy, allowing you to learn one language for all sorts of development.&lt;/p&gt;&lt;p&gt;The implemented variants:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-core&#34;&gt;XiaoXuan Core&lt;/a&gt;Build powerful user-space system programs that have extremely fast startup speed and small memory footprint, it can directly call &lt;em&gt;syscall&lt;/em&gt; and interoperate with C shared libraries. Single-file, statically linked runtime make applications highly portable.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-script&#34;&gt;XiaoXuan Script&lt;/a&gt;Build high-performance, solid web applications. It can be compiled to WebAssembly on-the-fly without the need for any build tools. It aims to be the next programming language for web development.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-managed&#34;&gt;XiaoXuan Managed&lt;/a&gt;Build secure, robust, low-latency and responsive cloud-native applications (such as microservices and serverless functions etc.), business systems, data science programs, A.I. programs and more. Each program runs in its own isolated environement, eliminating the need for containers. Applications do not need to be installed, they can be run with just a URL.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-native&#34;&gt;XiaoXuan Native&lt;/a&gt;A memory-safe, general-purpose programming language inspired by Rust but much simpler. It provides automatic memory management without garbage collection, and avoids complex concepts such as ownership, borrow checking, and lifetimes. It supports compiling to native code for architectures such as &lt;em&gt;x86-64&lt;/em&gt;, &lt;em&gt;aarch64&lt;/em&gt; and &lt;em&gt;riscv64&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-micro&#34;&gt;XiaoXuan Micro&lt;/a&gt;Build high-performance firmware for microcontroller easily, the built-in micro VM makes it possible to &amp;ldquo;write once, run anywhere&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hemashushu.github.io/works/xiaoxuan-logic&#34;&gt;XiaoXuan Logic&lt;/a&gt;A brand new and modern hardware description language (HDL) that lets you design hardware and chips in the same ease and collaboration as open-source software. Its built-in GPU-accelerated simulator dramatically enhances test efficiency, saving you valuable time and resources.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&#34;wide&#34;&gt;&lt;img src=&#34;./images/variants.webp&#34;         alt=&#34;The XiaoXuan Programming Language Family&#34;/&gt;&lt;figcaption&gt;            &lt;p&gt;The XiaoXuan Programming Language Family&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;The XiaoXuan programming language&lt;/em&gt; supports writing code in local languages, such as Chinese, Japanese and French. In addition to keywords, the standard library and related documentation are also translated into local languages. Using local language programming is beneficial for children, beginners and non-computer majors who are not native English speakers.&lt;/p&gt;&lt;p&gt;The implemented local language variants are as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;XiaoXuan Core Hans&lt;/span&gt; - The Chinese edition (中文版)&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;which-one-should-i-choose&#34;&gt;Which one should I choose?&lt;/h2&gt;&lt;p&gt;There are three variants designed for specialized application development:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;XiaoXuan Script: for building web applications.&lt;/li&gt;&lt;li&gt;XiaoXuan Micro: for building microcontroller firmware.&lt;/li&gt;&lt;li&gt;XiaoXuan Logic: for developing hardware such as digital circuits and chips.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The other three variants are general-purpose programming languages. However, the assets they generate run differently, so they have different focuses:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;XiaoXuan Core: for building command-line tools, system programs.&lt;/li&gt;&lt;li&gt;XiaoXuan Managed: for building server-side service programs, business systems, data processing programs, and desktop applicatons.&lt;/li&gt;&lt;li&gt;XiaoXuan Native: for building performance-critical native applications.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;where-to-get-started&#34;&gt;Where to get started&lt;/h2&gt;&lt;p&gt;If you are a beginner in XiaoXuan Programming Language, it is recommended to start with XiaoXuan Script. Because it doesn&amp;rsquo;t require you to download or install any programs, there is an online testing page on the project&amp;rsquo;s web site where you can write and run XiaoXuan Script programs to learn about the syntax and main features.&lt;/p&gt;&lt;p&gt;If you perfer to write programs that run locally, it is recommended to start with XiaoXuao Core, which makes it very easy to write utilities. Once you are familiar with XiaoXuan Core, it will be easier to move on to XiaoXuan Managed and XiaoXuan Native.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Script in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Get started with XiaoXuan Core in 5 minutes&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;manuals--tutorials&#34;&gt;Manuals &amp;amp; Tutorials&lt;/h2&gt;&lt;ul class=&#34;card&#34;&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c1&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;The XiaoXuan Programming Language Reference&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Lang&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2023-04-16&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Data types and Literals&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Variables&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Functions&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Collection&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Control Flow&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Method, Generic and Trait&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Pattern&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Chain&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Error Handling&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Packages and Modules&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Macro&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c5&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;Build a Simple OS (based on Linux kernel) from Scratch using XiaoXuan Core&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Core&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-09&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Set up a RISC-V virtual machine using QEMU&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `init` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Write a minimal `shell` program&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Fundamentals of file system and processes, implementing the `pwd` and `ls` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Implement the `mount` and `umount` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principals of `redirect`, implementing the `echo` and `cat` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Principal of `pipe`, implementing the `tee` and `tr` commands&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Session and process groups&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The `root` privileges, users and groups, and the `setuid` bit&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Add support for shell scripts&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;    &lt;li&gt;        &lt;div class=&#34;card-book c6&#34;&gt;            &lt;div class=&#34;frame&#34;&gt;                &lt;div class=&#34;name&#34;&gt;                    &lt;h3&gt;&lt;a href=&#34;&#34; title=&#34;&#34;&gt;Build a Docker-like Container Utility from Scratch using XiaoXuan Core&lt;/a&gt;&lt;/h3&gt;                    &lt;div class=&#34;separator&#34;&gt;&lt;/div&gt;                    &lt;div class=&#34;catalog&#34;&gt;XiaoXuan Core&lt;/div&gt;                &lt;/div&gt;                &lt;div class=&#34;date&#34;&gt;2024-01-15&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&#34;card-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The principal of Linux container&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the file system&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the process space&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;Isolating the accounts&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;null-link&#34;&gt;The virtual networking devices and route&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;        &lt;/div&gt;    &lt;/li&gt;&lt;/ul&gt;</description>
     </item>
   
 </channel>
</rss>
